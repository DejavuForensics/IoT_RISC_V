{
    "info": {
        "added": 1626900880.015948, 
        "started": 1627037191.078305, 
        "duration": 0, 
        "ended": 1627037191.431977, 
        "owner": null, 
        "score": 0.1, 
        "id": 2323502, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": null, 
        "custom": null, 
        "machine": {}, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [
        {
            "families": [], 
            "description": "Yara rule detected for file", 
            "severity": 1, 
            "ttp": {}, 
            "markcount": 1, 
            "references": [], 
            "marks": [
                {
                    "type": "generic", 
                    "description": "Possibly employs anti-virtualization techniques", 
                    "rule": "vmdetect"
                }
            ], 
            "name": "file_yara"
        }
    ], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [
                {
                    "meta": {
                        "description": "Possibly employs anti-virtualization techniques", 
                        "author": "nex"
                    }, 
                    "name": "vmdetect", 
                    "offsets": {
                        "vmware24": [
                            [
                                239029, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "dm13YXJl"
                    ]
                }
            ], 
            "sha1": "19268dbd45f2b2b6a50ecd4e24cf71dcb8165b2f", 
            "name": "libmount.so.1.1.0", 
            "type": "ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV), dynamically linked, BuildID[sha1]=dc5c0a58fde0b8e28d0f13f0415c36b350dc39a8, stripped", 
            "sha256": "ae3ac43391aae362628f229906a5d148d377da36eb8516b118b33ff5a04093ae", 
            "urls": [], 
            "crc32": "43BFC83F", 
            "path": "/srv/cuckoo/cwd/storage/binaries/ae3ac43391aae362628f229906a5d148d377da36eb8516b118b33ff5a04093ae", 
            "ssdeep": null, 
            "size": 325520, 
            "sha512": "884d4ab9dbd4d4f85082b353ded592999da8c063ab1d14804a80cd40298dbeb80ef528b623d17a97f38a2e6b3225195380dadf56ccb2c892cfe6195584ece999", 
            "md5": "c4144a45686f56f0ac9b5b61f0dd5057"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "2623038e-f3f8-44ae-96b3-ea86a5c8e932", 
        "parent_file_sha256": null, 
        "name": "ae3ac43391aae362628f229906a5d148d377da36eb8516b118b33ff5a04093ae", 
        "scan_date": 1627026508, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV)", 
            "sha1": "19268dbd45f2b2b6a50ecd4e24cf71dcb8165b2f", 
            "tags": [], 
            "timestamp_first_scan": 1625251423.54, 
            "timestamp_last_scan": 1627026559.58, 
            "sha256": "ae3ac43391aae362628f229906a5d148d377da36eb8516b118b33ff5a04093ae", 
            "md5": "c4144a45686f56f0ac9b5b61f0dd5057", 
            "size": 325520
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 6.36, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.2, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.77, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.18, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": 0, 
                    "duration": 3.02, 
                    "version": "unavailable", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 3.92, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 4.71, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-07-21 19:18:00 (full)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.54, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 8.61, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.13, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.04, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.22, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 6.2, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "27bc8dda-3335-431a-9112-df1846e39c3c", 
        "file_sha256": "ae3ac43391aae362628f229906a5d148d377da36eb8516b118b33ff5a04093ae"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "summary": {
            "error": "resource has not been scanned yet"
        }
    }, 
    "network": {
        "mitm": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "debug": {
        "action": [
            "vmrouting"
        ], 
        "dbgview": [], 
        "errors": [
            "Error processing task #2323502: it appears that the Virtual Machine hasn't been able to contact back to the Cuckoo Host. There could be a few reasons for this, please refer to our documentation on the matter: https://cuckoo.sh/docs/faq/index.html#troubleshooting-vm-network-configuration"
        ], 
        "log": [], 
        "cuckoo": [
            "2021-07-23 10:38:17,686 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:38:27,711 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:38:37,736 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:38:47,763 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:38:57,790 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:07,808 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:17,833 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:27,858 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:37,881 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:47,906 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:39:57,932 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n", 
            "2021-07-23 10:40:07,953 [cuckoo.core.scheduler] DEBUG: Task #2323502: no machine available yet\n"
        ]
    }, 
    "strings": [
        "2}KS@1", 
        "IC\u001fpfNhl,w8y", 
        "_ITM_deregisterTMCloneTable", 
        "_ITM_registerTMCloneTable", 
        "__cxa_finalize", 
        "__stack_chk_guard", 
        "gettimeofday", 
        "__errno_location", 
        "clock_gettime", 
        "sysinfo", 
        "__stack_chk_fail", 
        "stderr", 
        "__vfprintf_chk", 
        "__fprintf_chk", 
        "strlen", 
        "strcmp", 
        "getpid", 
        "realloc", 
        "__assert_fail", 
        "malloc", 
        "memcpy", 
        "strdup", 
        "mnt_new_cache", 
        "calloc", 
        "mnt_free_cache", 
        "blkid_put_cache", 
        "mnt_ref_cache", 
        "mnt_unref_cache", 
        "mnt_unref_table", 
        "mnt_cache_set_targets", 
        "mnt_ref_table", 
        "mnt_cache_read_tags", 
        "blkid_new_probe_from_filename", 
        "blkid_probe_enable_superblocks", 
        "blkid_probe_set_superblocks_flags", 
        "blkid_probe_enable_partitions", 
        "blkid_probe_set_partitions_flags", 
        "blkid_do_safeprobe", 
        "blkid_free_probe", 
        "blkid_probe_lookup_value", 
        "mnt_cache_device_has_tag", 
        "mnt_cache_find_tag_value", 
        "mnt_get_fstype", 
        "mnt_resolve_path", 
        "mnt_resolve_target", 
        "mnt_reset_iter", 
        "mnt_table_next_fs", 
        "mnt_fs_is_kernel", 
        "mnt_fs_is_swaparea", 
        "mnt_fs_streq_target", 
        "mnt_pretty_path", 
        "strncmp", 
        "mnt_resolve_tag", 
        "blkid_evaluate_tag", 
        "mnt_resolve_spec", 
        "blkid_parse_tag_string", 
        "mnt_new_fs", 
        "mnt_reset_fs", 
        "memset", 
        "mnt_free_fs", 
        "mnt_ref_fs", 
        "mnt_unref_fs", 
        "mnt_copy_fs", 
        "mnt_fs_get_userdata", 
        "mnt_fs_set_userdata", 
        "mnt_fs_get_srcpath", 
        "mnt_fs_get_source", 
        "mnt_fs_set_source", 
        "mnt_fs_get_table", 
        "mnt_fs_get_tag", 
        "mnt_fs_get_target", 
        "mnt_fs_set_target", 
        "mnt_fs_get_propagation", 
        "strstr", 
        "mnt_fs_is_pseudofs", 
        "mnt_fs_streq_srcpath", 
        "mnt_fs_is_netfs", 
        "mnt_fs_get_fstype", 
        "mnt_fstype_is_pseudofs", 
        "mnt_fstype_is_netfs", 
        "mnt_fs_set_fstype", 
        "mnt_fs_strdup_options", 
        "__snprintf_chk", 
        "mnt_optstr_remove_option", 
        "mnt_optstr_append_option", 
        "mnt_get_builtin_optmap", 
        "mnt_optstr_get_options", 
        "mnt_fs_get_options", 
        "mnt_fs_get_optional_fields", 
        "mnt_fs_set_options", 
        "mnt_split_optstr", 
        "mnt_fs_append_options", 
        "mnt_fs_prepend_options", 
        "mnt_optstr_prepend_option", 
        "mnt_fs_get_fs_options", 
        "mnt_fs_get_vfs_options", 
        "mnt_fs_get_user_options", 
        "mnt_fs_get_attributes", 
        "mnt_fs_set_attributes", 
        "mnt_fs_append_attributes", 
        "mnt_fs_prepend_attributes", 
        "mnt_fs_get_freq", 
        "mnt_fs_set_freq", 
        "mnt_fs_get_passno", 
        "mnt_fs_set_passno", 
        "mnt_fs_get_root", 
        "mnt_fs_set_root", 
        "mnt_fs_get_swaptype", 
        "mnt_fs_get_size", 
        "mnt_fs_get_usedsize", 
        "mnt_fs_get_priority", 
        "mnt_fs_set_priority", 
        "mnt_fs_get_bindsrc", 
        "mnt_fs_set_bindsrc", 
        "mnt_fs_get_id", 
        "mnt_fs_get_parent_id", 
        "mnt_fs_get_devno", 
        "mnt_fs_get_tid", 
        "mnt_fs_get_option", 
        "mnt_optstr_get_option", 
        "mnt_fs_get_attribute", 
        "mnt_fs_get_comment", 
        "mnt_fs_set_comment", 
        "mnt_fs_append_comment", 
        "mnt_fs_match_target", 
        "mnt_fs_match_source", 
        "mnt_fs_match_fstype", 
        "mnt_match_fstype", 
        "mnt_fs_match_options", 
        "mnt_match_options", 
        "mnt_fs_print_debug", 
        "fwrite", 
        "mnt_free_mntent", 
        "mnt_fs_to_mntent", 
        "mnt_init_debug", 
        "getuid", 
        "geteuid", 
        "mnt_get_library_version", 
        "mnt_get_library_features", 
        "strtoul", 
        "strtok_r", 
        "getgid", 
        "getegid", 
        "mnt_new_iter", 
        "mnt_free_iter", 
        "mnt_iter_get_direction", 
        "mnt_new_lock", 
        "__asprintf_chk", 
        "mnt_free_lock", 
        "mnt_lock_block_signals", 
        "memcmp", 
        "mnt_unlock_file", 
        "sigprocmask", 
        "__xstat64", 
        "unlink", 
        "sigemptyset", 
        "sigfillset", 
        "sigdelset", 
        "sigaction", 
        "fcntl64", 
        "nanosleep", 
        "mnt_lock_file", 
        "fchmod", 
        "memmove", 
        "mnt_optstr_next_option", 
        "mnt_optstr_deduplicate_option", 
        "mnt_optstr_set_option", 
        "strchr", 
        "mnt_optstr_get_flags", 
        "mnt_optstr_apply_flags", 
        "strndup", 
        "selinux_trans_to_raw_context", 
        "freecon", 
        "__ctype_b_loc", 
        "strncpy", 
        "mnt_new_table", 
        "mnt_table_get_nents", 
        "mnt_table_is_empty", 
        "mnt_table_set_userdata", 
        "mnt_table_get_userdata", 
        "mnt_table_enable_comments", 
        "mnt_table_with_comments", 
        "mnt_table_get_intro_comment", 
        "mnt_table_set_intro_comment", 
        "mnt_table_append_intro_comment", 
        "mnt_table_get_trailing_comment", 
        "mnt_table_set_trailing_comment", 
        "mnt_table_append_trailing_comment", 
        "mnt_table_set_cache", 
        "mnt_table_get_cache", 
        "mnt_table_find_fs", 
        "mnt_table_add_fs", 
        "mnt_table_insert_fs", 
        "mnt_table_move_fs", 
        "mnt_table_remove_fs", 
        "mnt_reset_table", 
        "mnt_free_table", 
        "mnt_table_get_root_fs", 
        "mnt_table_first_fs", 
        "mnt_table_last_fs", 
        "mnt_table_find_next_fs", 
        "mnt_table_uniq_fs", 
        "mnt_table_set_iter", 
        "mnt_table_next_child_fs", 
        "mnt_table_find_target", 
        "mnt_table_find_mountpoint", 
        "mnt_table_find_srcpath", 
        "mnt_table_find_tag", 
        "mnt_table_find_target_with_option", 
        "mnt_table_find_source", 
        "mnt_table_find_pair", 
        "mnt_table_find_devno", 
        "__memcpy_chk", 
        "__isoc99_sscanf", 
        "mnt_table_is_fs_mounted", 
        "mnt_new_tabdiff", 
        "mnt_free_tabdiff", 
        "mnt_tabdiff_next_change", 
        "mnt_diff_tables", 
        "strtol", 
        "__strtoul_internal", 
        "__getdelim", 
        "mnt_guess_system_root", 
        "strrchr", 
        "mnt_table_parse_stream", 
        "fileno", 
        "fclose", 
        "mnt_table_parse_file", 
        "fopen64", 
        "fdopen", 
        "mnt_table_parse_dir", 
        "versionsort64", 
        "scandirat64", 
        "__fxstatat64", 
        "openat64", 
        "mnt_new_table_from_file", 
        "mnt_new_table_from_dir", 
        "mnt_table_set_parser_errcb", 
        "mnt_table_parse_swaps", 
        "mnt_get_swaps_path", 
        "mnt_table_parse_fstab", 
        "mnt_get_fstab_path", 
        "mnt_table_parse_mtab", 
        "fflush", 
        "rename", 
        "fchown", 
        "mnt_new_update", 
        "mnt_free_update", 
        "mnt_update_get_filename", 
        "mnt_update_is_ready", 
        "mnt_update_set_fs", 
        "mnt_update_get_fs", 
        "mnt_update_get_mflags", 
        "mnt_update_force_rdonly", 
        "mnt_table_write_file", 
        "mnt_table_replace_file", 
        "mnt_update_table", 
        "__printf_chk", 
        "program_invocation_short_name", 
        "putchar", 
        "eaccess", 
        "mnt_tag_is_valid", 
        "getcwd", 
        "utimensat", 
        "mnt_mangle", 
        "mnt_unmangle", 
        "fstatfs64", 
        "getpwuid_r", 
        "getpwnam_r", 
        "getgrnam_r", 
        "getgroups", 
        "mnt_get_mtab_path", 
        "mnt_has_regular_mtab", 
        "__lxstat64", 
        "mkostemp64", 
        "mnt_get_mountpoint", 
        "lseek64", 
        "fmemopen", 
        "mnt_parse_version_string", 
        "mnt_context_reset_status", 
        "mnt_new_context", 
        "mnt_context_is_restricted", 
        "mnt_context_force_unrestricted", 
        "mnt_context_set_optsmode", 
        "mnt_context_get_optsmode", 
        "mnt_context_disable_canonicalize", 
        "mnt_context_is_nocanonicalize", 
        "mnt_context_enable_lazy", 
        "mnt_context_is_lazy", 
        "mnt_context_enable_fork", 
        "mnt_context_is_fork", 
        "mnt_context_is_parent", 
        "mnt_context_is_child", 
        "mnt_context_enable_rdonly_umount", 
        "mnt_context_is_rdonly_umount", 
        "mnt_context_enable_rwonly_mount", 
        "mnt_context_is_rwonly_mount", 
        "mnt_context_forced_rdonly", 
        "mnt_context_disable_helpers", 
        "mnt_context_is_nohelpers", 
        "mnt_context_enable_sloppy", 
        "mnt_context_is_sloppy", 
        "mnt_context_enable_fake", 
        "mnt_context_is_fake", 
        "mnt_context_disable_mtab", 
        "mnt_context_is_nomtab", 
        "mnt_context_disable_swapmatch", 
        "mnt_context_is_swapmatch", 
        "mnt_context_enable_force", 
        "mnt_context_is_force", 
        "mnt_context_enable_verbose", 
        "mnt_context_is_verbose", 
        "mnt_context_enable_loopdel", 
        "mnt_context_is_loopdel", 
        "mnt_context_set_fs", 
        "mnt_context_get_fs", 
        "mnt_context_get_fs_userdata", 
        "mnt_context_get_fstab_userdata", 
        "mnt_context_get_mtab_userdata", 
        "mnt_context_set_source", 
        "mnt_context_get_source", 
        "mnt_context_set_target", 
        "mnt_context_get_target", 
        "mnt_context_set_target_prefix", 
        "mnt_context_get_target_prefix", 
        "mnt_context_set_fstype", 
        "mnt_context_get_fstype", 
        "mnt_context_set_options", 
        "mnt_context_append_options", 
        "mnt_context_get_options", 
        "mnt_context_set_fstype_pattern", 
        "mnt_context_set_options_pattern", 
        "mnt_context_set_fstab", 
        "mnt_context_set_tables_errcb", 
        "mnt_context_set_cache", 
        "mnt_context_get_cache", 
        "mnt_context_set_passwd_cb", 
        "mnt_context_set_mflags", 
        "mnt_context_get_mflags", 
        "mnt_context_set_user_mflags", 
        "mnt_context_get_user_mflags", 
        "mnt_context_set_mountdata", 
        "mnt_context_tab_applied", 
        "mnt_context_get_status", 
        "mnt_reset_context", 
        "mnt_context_helper_executed", 
        "mnt_context_get_helper_status", 
        "mnt_context_syscall_called", 
        "mnt_context_get_syscall_errno", 
        "mnt_context_set_syscall_status", 
        "mnt_context_strerror", 
        "__vsnprintf_chk", 
        "mnt_context_get_excode", 
        "bindtextdomain", 
        "dcgettext", 
        "mnt_context_init_helper", 
        "mnt_context_helper_setopt", 
        "mnt_context_wait_for_children", 
        "waitpid", 
        "mnt_context_set_target_ns", 
        "mnt_free_context", 
        "mnt_context_get_target_ns", 
        "mnt_context_get_origin_ns", 
        "mnt_context_switch_ns", 
        "mnt_context_switch_origin_ns", 
        "mnt_context_switch_target_ns", 
        "mnt_context_get_lock", 
        "mnt_context_get_fstab", 
        "mnt_context_get_mtab", 
        "mnt_context_get_table", 
        "mnt_context_apply_fstab", 
        "mnt_context_is_fs_mounted", 
        "blkid_known_fstype", 
        "setgid", 
        "setuid", 
        "mnt_context_prepare_mount", 
        "is_selinux_enabled", 
        "mnt_context_do_mount", 
        "mnt_context_finalize_mount", 
        "mnt_context_mount", 
        "mnt_context_next_mount", 
        "mnt_context_next_remount", 
        "mnt_context_find_umount_fs", 
        "mnt_context_prepare_umount", 
        "mnt_context_do_umount", 
        "umount2", 
        "mnt_context_finalize_umount", 
        "mnt_context_umount", 
        "mnt_context_next_umount", 
        "epoll_ctl", 
        "epoll_wait", 
        "inotify_add_watch", 
        "inotify_rm_watch", 
        "inotify_init1", 
        "mnt_new_monitor", 
        "mnt_ref_monitor", 
        "mnt_monitor_enable_userspace", 
        "mnt_monitor_enable_kernel", 
        "mnt_monitor_close_fd", 
        "mnt_unref_monitor", 
        "mnt_monitor_get_fd", 
        "epoll_create1", 
        "mnt_monitor_wait", 
        "mnt_monitor_next_change", 
        "mnt_monitor_event_cleanup", 
        "closedir", 
        "__fxstat64", 
        "__open64_2", 
        "realpath", 
        "secure_getenv", 
        "mbstowcs", 
        "wcswidth", 
        "getpwuid", 
        "getgrgid", 
        "getdtablesize", 
        "readdir64", 
        "setmntent", 
        "getmntent", 
        "hasmntopt", 
        "endmntent", 
        "__ctype_tolower_loc", 
        "strncasecmp", 
        "wcwidth", 
        "__ctype_get_mb_cur_max", 
        "mbrtowc", 
        "iswprint", 
        "__sprintf_chk", 
        "wcstombs", 
        "mempcpy", 
        "wctomb", 
        "stdout", 
        "select", 
        "setenv", 
        "isatty", 
        "strtok", 
        "faccessat", 
        "execvp", 
        "getlogin", 
        "srandom", 
        "__tls_get_addr", 
        "getppid", 
        "getrandom", 
        "syscall", 
        "jrand48", 
        "strcpy", 
        "localeconv", 
        "__strtol_internal", 
        "strtod", 
        "__vasprintf_chk", 
        "strspn", 
        "strcspn", 
        "strtoll", 
        "localtime_r", 
        "strptime", 
        "mktime", 
        "gmtime_r", 
        "strftime", 
        "ttyname", 
        "__xpg_basename", 
        "stpcpy", 
        "strcasecmp", 
        "__libc_current_sigrtmax", 
        "__libc_current_sigrtmin", 
        "__isoc99_fscanf", 
        "socket", 
        "setsockopt", 
        "connect", 
        "__sched_cpualloc", 
        "__sched_cpufree", 
        "__openat64_2", 
        "fdopendir", 
        "rewinddir", 
        "readlinkat", 
        "readlink", 
        "__isoc99_vfscanf", 
        "strsep", 
        "libblkid.so.1", 
        "libselinux.so.1", 
        "librt.so.1", 
        "libc.so.6", 
        "__progname", 
        "__environ", 
        "__cxa_atexit", 
        "ld-linux-riscv64-lp64d.so.1", 
        "libmount.so.1", 
        "MOUNT_2.19", 
        "MOUNT_2.20", 
        "MOUNT_2.21", 
        "MOUNT_2.22", 
        "MOUNT_2.23", 
        "MOUNT_2.24", 
        "MOUNT_2.25", 
        "MOUNT_2.26", 
        "MOUNT_2.28", 
        "MOUNT_2.30", 
        "MOUNT_2.33", 
        "MOUNT_2.34", 
        "MOUNT_2_35", 
        "GLIBC_2.27", 
        "BLKID_1.0", 
        "BLKID_2.17", 
        "BLKID_2.15", 
        "GLIBC_2.28", 
        "dEaopo", 
        "BiEaop_", 
        "EEaop_", 
        "Wo@0'yq", 
        "*#8!+#41+#0A+#8a)#4q)#0", 
        "dEao`N", 
        " #41!#0A!", 
        "dBiEao0", 
        "#41C#8aA", 
        "E#8!C#0AC#4", 
        "L#<1K#8AK", 
        "E#0!M#8", 
        "L#4QK6", 
        "(#8A'*", 
        "(#0!)#0a'", 
        "gn#0!!", 
        "(#0!)#8A'#4Q'#0a'#<q%#4", 
        "B#8!A#4", 
        "PARTUUID", 
        "PARTLABEL", 
        "PART_ENTRY_UUID", 
        "PART_ENTRY_NAME", 
        "[%p]: ", 
        "libmount/src/cache.c", 
        "libmount", 
        "%d: %s: %8s: ", 
        "add entry [%2zd] (%s): %s: %s", 
        "devname", 
        "tagname", 
        "tagval", 
        "canonicalize path %s", 
        "free [refcount=%d]", 
        "tags for %s requested", 
        "reading tags for: %s", 
        "tag %s already cached", 
        "read %zd tags", 
        "get %s FS type", 
        "libblkid rc=%d", 
        "/dev/loop", 
        "cache_add_entry", 
        "cache_add_tag", 
        "cache_find_tag_value", 
        "libmount/src/fs.c", 
        "shared:", 
        "master:", 
        "unbindable", 
        "------ fs:", 
        "source: %s", 
        "target: %s", 
        "fstype: %s", 
        "optstr: %s", 
        "VFS-optstr: %s", 
        "FS-opstr: %s", 
        "user-optstr: %s", 
        "optional-fields: '%s'", 
        "attributes: %s", 
        "root:   %s", 
        "swaptype: %s", 
        "size: %jd", 
        "usedsize: %jd", 
        "priority: %d", 
        "bindsrc: %s", 
        "freq:   %d", 
        "pass:   %d", 
        "id:     %d", 
        "parent: %d", 
        "devno:  %d:%d", 
        "tid:    %d", 
        "comment: '%s'", 
        "update_str", 
        "info about all subsystems", 
        "LIBMOUNT_DEBUG", 
        "%d: %s: don't print memory addresses (SUID executable).", 
        "library debug mask: 0x%04x", 
        "library version: %s", 
        "    feature: %s", 
        "Available \"%s=<name>[,...]|<mask>\" debug masks:", 
        "   %-8s [0x%04x] : %s", 
        "paths and tags cache", 
        "library context (handler)", 
        "mountinfo changes tracking", 
        "FS abstraction", 
        "this help", 
        "mtab and utab locking", 
        "loop devices routines", 
        "options", 
        "mount options parsing", 
        "fstab, mtab, mountinfo routines", 
        "mtab, utab updates", 
        "misc library utils", 
        "monitor", 
        "mount tables monitor", 
        "btrfs specific routines", 
        "verity", 
        "verity specific routines", 
        "%s~.%d", 
        "alloc: default linkfile=%s, lockfile=%s", 
        " !!! LOCKED !!!", 
        "free%s", 
        "BLOCKED", 
        "UNBLOCKED", 
        "signals: %s", 
        "ENABLED", 
        "DISABLED", 
        "libmount/src/lock.c", 
        "ml->lockfile", 
        "flock: %s", 
        "new lock filename: '%s'", 
        "unlocking", 
        "cleaning", 
        "(%d) %s", 
        "%s: unflocking", 
        "unlink %s", 
        "restoring sigmask", 
        "%s: can't F_SETLK lockfile, errno=%d", 
        "(%d) waiting for F_SETLKW (now=%lu, maxtime=%lu, diff=%lu)", 
        "(%d) leaving mnt_wait_setlkw(), rc=%d", 
        "%s: can't create link: time out (perhaps there is a stale lock file?)", 
        "%s: (%d) successfully locked", 
        "%s: locking", 
        "mnt_lock_use_simplelock", 
        "libmount/src/optmap.c", 
        "namelen", 
        "defaults", 
        "noauto", 
        "user[=]", 
        "nouser", 
        "nousers", 
        "noowner", 
        "nogroup", 
        "_netdev", 
        "comment=", 
        "loop[=]", 
        "encryption=", 
        "nofail", 
        "uhelper=", 
        "helper=", 
        "verity.hashdevice=", 
        "verity.roothash=", 
        "verity.hashoffset=", 
        "verity.roothashfile=", 
        "verity.fecdevice=", 
        "verity.fecoffset=", 
        "verity.fecroots=", 
        "noexec", 
        "nosuid", 
        "dirsync", 
        "remount", 
        "silent", 
        "nomand", 
        "noatime", 
        "iversion", 
        "noiversion", 
        "diratime", 
        "nodiratime", 
        "relatime", 
        "norelatime", 
        "strictatime", 
        "nostrictatime", 
        "lazytime", 
        "nolazytime", 
        "runbindable", 
        "private", 
        "rprivate", 
        "rslave", 
        "shared", 
        "rshared", 
        "mnt_get_builtin_optmap", 
        "mnt_optmap_get_entry", 
        "libmount/src/optstr.c", 
        "optstr", 
        "*optstr", 
        "OPTIONS", 
        "parse error: \"%s\"", 
        "failed to prepend '%s[=%s]' to '%s'", 
        "applying 0x%08lu flags to '%s'", 
        "new optstr '%s'", 
        "failed to apply flags [rc=%d]", 
        "fixing SELinux context", 
        "SELinux context '%s' translated to '%s'", 
        "fixing uid", 
        "useruid", 
        "fixing gid", 
        "usergid", 
        "fixing user", 
        "mnt_optstr_parse_next", 
        "__mnt_optstr_append_option", 
        "mnt_optstr_locate_option", 
        "insert entry: %s %s", 
        "libmount/src/tab.c", 
        "add entry: %s %s", 
        "lookup root fs", 
        " messy mountinfo, walk to %s", 
        "lookup next fs", 
        "de-duplicate", 
        "moving parent ID from %d -> %d", 
        "remove duplicate %s", 
        "lookup next child of '%s'", 
        "lookup TARGET: '%s'", 
        "lookup absolute TARGET: '%s'", 
        "lookup canonical TARGET: '%s'", 
        "lookup MOUNTPOINT: '%s'", 
        "lookup SRCPATH: '%s'", 
        "not found btrfs volume setting", 
        "subvolid", 
        "failed to parse subvolid=", 
        "lookup canonical SRCPATH: '%s'", 
        "lookup by TAG: %s %s", 
        "lookup TARGET: '%s' with OPTION %s %s", 
        "lookup SOURCE: '%s'", 
        "lookup SOURCE: %s TARGET: %s", 
        "lookup DEVNO: %d", 
        "fsroot", 
        "lookup fs-root for '%s'", 
        "fs-root for bind", 
        "%s fs-root is %s", 
        "not found '%s' in mountinfo -- using default", 
        "source root: %s, source FS root: %s", 
        "lookup for btrfs FS root", 
        " found subvolid=%s, checking", 
        "volsz + 1 < sizeof(stringify_value(UINT64_MAX))", 
        " trying target=%s subvolid=%s", 
        "subvol", 
        " subvolid/subvol not found, checking default", 
        " trying target=%s default subvolid=%s", 
        "setting FS root: btrfs default subvolid = %s", 
        " using subvol=%s", 
        " not found btrfs volume setting", 
        " error on btrfs volume setting evaluation", 
        "FS root result: %s", 
        "mnt_table_is_fs_mounted: target=%s, source=%s", 
        "- ignore (swap or no data)", 
        "- ignore (no source/target)", 
        "mnt_table_is_fs_mounted: src=%s, tgt=%s, root=%s", 
        "offset", 
        "failed to parse offset=", 
        "checking for loop: src=%s", 
        "used loop", 
        "%*[/]%*[^/]%*[/]%*[^/]%n", 
        "mnt_table_is_fs_mounted: %s [rc=%d]", 
        "mnt_table_with_comments", 
        "mnt_table_get_fs_root", 
        "get_btrfs_fs_root", 
        "libmount/src/tab_diff.c", 
        "add change on %s", 
        "resetting", 
        "analyze new (%d entries), old (%d entries)", 
        "%d changes detected", 
        "tabdiff_add_entry", 
        "appending %s comment", 
        "trailing", 
        ".fstab", 
        "mountinfo", 
        "libmount/src/tab_parse.c", 
        "filename", 
        "%s: start parsing [entries=%d, filter=%s]", 
        "/proc/mounts", 
        "%s: no final newline", 
        "%s:%zu: missing newline at line", 
        "trying to guess table type", 
        "Filename", 
        "tab parse error: [source]", 
        "tab parse error: [target]", 
        "tab parse error: [fstype]", 
        "tab parse error: [options]", 
        "tab parse error: [freq]", 
        "tab parse error: [passno]", 
        "tab parse error on: '%s' [rc=%d]", 
        "tab parse error: [id]", 
        "tab parse error: [parent]", 
        "tab parse error: [maj:min]", 
        "tab parse error: [mountroot]", 
        " (deleted)", 
        "tab parse error: [VFS options]", 
        "mountinfo parse error: separator not found", 
        "tab parse error: [empty source]", 
        "tab parse error: [regular source]", 
        "tab parse error: [FS options]", 
        "tab parse error: [merge VFS and FS options]", 
        "!fs->source", 
        "!fs->target", 
        "TARGET=", 
        "BINDSRC=", 
        "ATTRS=", 
        "utab parse error: ENOMEM", 
        "tab parse error: [swaptype]", 
        "tab parse error: [size]", 
        "tab parse error: [used size]", 
        "tab parse error: [priority]", 
        "%s:%zu: %s parse error", 
        "TID for %s is %d", 
        "/dev/root", 
        "canonical root FS: %s", 
        "fs->refcount == 1", 
        "%s: stop parsing (%d entries)", 
        "%s: parse error (rc=%d)", 
        "/proc/", 
        "parsing done [filename=%s, rc=%d]", 
        "new tab for file: %s", 
        "%s table parser filter", 
        "%s requested as mtab", 
        "mtab parse: #1 read mountinfo", 
        "/proc/self/mountinfo", 
        "mtab parse: #2 read utab", 
        "merging user fs", 
        "found fs -- appending user optstr", 
        "found fs:", 
        "mtab parse: #3 merge utab", 
        "__table_parse_stream", 
        "mnt_parse_utab_line", 
        "__mnt_table_parse_mtab", 
        "libmount/src/tab_update.c", 
        "%s %s %s %s %d %d", 
        "UPDATE", 
        "%s: updating", 
        "SRC=%s ", 
        "TARGET=%s ", 
        "ROOT=%s ", 
        "BINDSRC=%s ", 
        "ATTRS=%s ", 
        "OPTS=%s", 
        "%s: write entry failed: %m", 
        "%s: fflush failed: %m", 
        "%s: done [rc=%d]", 
        "allocate", 
        "resetting FS [target=%s, flags=0x%08lx]", 
        "FS template:", 
        "no writable file available [rc=%d]", 
        "upd->fs == NULL", 
        "prepare utab entry", 
        "utab entry unnecessary (no options)", 
        "setting FS root", 
        "upd->fs", 
        "utab entry OK", 
        "write file done [rc=%d]", 
        "%s: replacing", 
        "replace done [rc=%d]", 
        "%s: update tab", 
        "%s: remove entry", 
        "%s: modify target", 
        "%s: modify options", 
        "%s: add entry", 
        "%s: update tab: done [rc=%d]", 
        "%s: checking for previous update", 
        "%s: found %s %s", 
        "%s: not-found (umounted) %s", 
        "%s: previous update check done [rc=%d]", 
        "fprintf_mtab_fs", 
        "add_file_entry", 
        "utab_new_entry", 
        "set_fs_root", 
        "update_modify_options", 
        "libmount/src/test.c", 
        "--help", 
        "FAILED [rc=%d]", 
        "Usage:", 
        "%s <test> [testoptions]", 
        "Tests:", 
        "mnt_run_test", 
        "try write %s dir: %s", 
        " access OK", 
        " access FAILED", 
        " access %s [%s]", 
        " doing open-write test", 
        "/proc/cmdline", 
        "libmount/src/utils.c", 
        "moving to %s parent", 
        "failed to chdir to %s: %m", 
        "failed to obtain current directory: %m", 
        "unexpected chdir (expected=%s, cwd=%s)", 
        "current directory moved to %s [last_component='%s']", 
        " doing utimensat() based write test", 
        "fuse.curlftpfs", 
        "fuse.sshfs", 
        "smackfs", 
        "cramfs", 
        "pipefs", 
        "hostfs", 
        "squashfs", 
        "pstore", 
        "cgroup", 
        "hugetlbfs", 
        "configfs", 
        "debugfs", 
        "openpromfs", 
        "binfmt_misc", 
        "nilfs2", 
        "efivarfs", 
        "sockfs", 
        "autofs", 
        "securityfs", 
        "reiser4", 
        "iso9660", 
        "mqueue", 
        "ecryptfs", 
        "futexfs", 
        "hfsplus", 
        "devpts", 
        "selinuxfs", 
        "reading filesystems list from: %s", 
        " %128[^", 
        "filesystems", 
        "/etc/filesystems", 
        "/proc/filesystems", 
        "cannot convert '%s' username to UID", 
        "cannot convert '%s' groupname to GID", 
        "/proc/swaps", 
        "LIBMOUNT_SWAPS", 
        "/etc/fstab", 
        "LIBMOUNT_FSTAB", 
        "/etc/mtab", 
        "LIBMOUNT_MTAB", 
        "mtab: %s", 
        "%s: writable", 
        "%s: irregular/non-writable", 
        "/dev/.mount/utab", 
        "/run/mount/utab", 
        "LIBMOUNT_UTAB", 
        "utab: %s", 
        "%s: irregular/non-writable file", 
        "%s.XXXXXX", 
        "%s mountpoint is %s", 
        "guessing system root [devno %u:%u]", 
        "  devno converted to %s", 
        "  root=%s converted to %s", 
        "  failed to parse root='%s'", 
        "  converting root='%s'", 
        "anon_inodefs", 
        "cgroup2", 
        "cpuset", 
        "devtmpfs", 
        "fuse.archivemount", 
        "fuse.avfsd", 
        "fuse.dumpfs", 
        "fuse.encfs", 
        "fuse.gvfs-fuse-daemon", 
        "fuse.gvfsd-fuse", 
        "fuse.lxcfs", 
        "fuse.rofiles-fuse", 
        "fuse.vmware-vmblock", 
        "fuse.xwmfs", 
        "fusectl", 
        "overlay", 
        "rootfs", 
        "rpc_pipefs", 
        "append_string", 
        "is_file_empty", 
        "mnt_fstype_is_pseudofs", 
        "mnt_statfs_get_fstype", 
        "add_filesystem", 
        "libmount/src/version.c", 
        "ver_string", 
        "2.35.0", 
        "selinux", 
        "namespaces", 
        "assert", 
        "mnt_parse_version_string", 
        "enabling flag %04x", 
        "disabling flag %04x", 
        "save FS as template", 
        "[RESTRICTED]", 
        "----> allocate %s", 
        "force UNRESTRICTED", 
        "setting new FS", 
        "copy FS from template", 
        "no FS template, reset only", 
        "ENABLED!", 
        "disabled", 
        "tabfilter %s", 
        "libmount/src/context.c", 
        "merging mount flags", 
        "final flags: VFS=%08lx user=%08lx", 
        "force fstab usage for non-root users!", 
        "use default optsmode", 
        "apply entry:", 
        "OPTSMODE (opt-part): ignore=%d, append=%d, prepend=%d, replace=%d", 
        "final entry [rc=%d]:", 
        "cxt->fs", 
        "(cxt->flags & MNT_FL_MOUNTOPTS_FIXED)", 
        "<---- reset [status=%d] ---->", 
        "syscall status set to: %d", 
        "<no-message>", 
        "/usr/share/locale", 
        "util-linux", 
        "operation failed: %m", 
        "excode: rc=%d message=\"%s\"", 
        "initialized for [u]mount.<type> helper [rc=%d]", 
        "forking context", 
        "fork failed %m", 
        "child created", 
        "add new child %d", 
        "mnt_context_is_parent(cxt)", 
        "waiting for child (%d/%d): %d", 
        "Setting %s as target namespace", 
        "/proc/self/ns/mnt", 
        "Trying whether namespace is valid", 
        "setns(2) failed [errno=%d %m]", 
        "<---- free", 
        "<---- clone ---->", 
        "target", 
        "original", 
        "Switching to %s namespace", 
        "(cxt->flags & MNT_FL_MOUNTFLAGS_MERGED)", 
        "%s/%s.%s", 
        "%-25s ... %s", 
        "/sbin:/sbin/fs.d:/sbin/fs", 
        "utab path initialized to: %s", 
        "checking for writable tab files", 
        "cxt->action", 
        "prepare update", 
        "skip update: only MS_PROPAGATION", 
        "root umount: setting NOMTAB", 
        "skip update: NOMTAB flag", 
        "skip update: no writable destination", 
        "skip update: syscall failed [status=%d]", 
        "skip update: umount, no table", 
        "mtab requested [nents=%d]", 
        "preparing source path", 
        "srcpath '%s'", 
        "failed to prepare srcpath [rc=%d]", 
        "REMOUNT/BIND/MOVE/pseudo FS source: %s", 
        "final srcpath '%s'", 
        "preparing target path", 
        "X-mount.mkdir", 
        "x-mount.mkdir", 
        "mkdir %s (%s) wanted", 
        "failed to parse mkdir mode '%s'", 
        "mkdir %s failed: %m", 
        "failed to prepare target '%s'", 
        "final target '%s'", 
        "access(%s) failed [%m]", 
        "preparing fstype", 
        "FS type: %s [rc=%d]", 
        "don't update: NOMTAB flag", 
        "don't update: no update prepared", 
        "don't update: error evaluate or already updated", 
        "don't update: external helper", 
        "don't update: syscall/helper failed/not called", 
        "fstab already applied -- skip", 
        "OPTSMODE (file-part): force=%d, fstab=%d, mtab=%d", 
        "fstab not required -- skip", 
        "only target; fstab/mtab not required -- skip, probably MS_PROPAGATION", 
        "trying to apply fstab (src=%s, target=%s)", 
        "trying to apply mtab (src=%s, target=%s)", 
        "only target; ignore missing mtab entry on remount", 
        "failed to find entry in fstab/mtab [rc=%d]: %m", 
        "mnt_context_merge_mflags", 
        "apply_table", 
        "mnt_context_propagation_only", 
        "mnt_fork_context", 
        "mnt_context_wait_for_children", 
        "mnt_context_prepare_helper", 
        "context_init_paths", 
        "mnt_context_mtab_writable", 
        "mnt_context_utab_writable", 
        "mnt_context_get_writable_tabpath", 
        "mnt_context_prepare_update", 
        "mnt_context_prepare_srcpath", 
        "mnt_context_prepare_target", 
        "mkdir_target", 
        "mnt_context_guess_srcpath_fstype", 
        "mnt_context_guess_fstype", 
        "mnt_context_update_tabs", 
        "libmount/src/context_loopdev.c", 
        "loopdev specific options detected", 
        "automatically enabling loop= option", 
        "trying to setup device for %s", 
        "enabling READ-ONLY flag", 
        "sizelimit", 
        "failed to parse sizelimit=", 
        "encryption", 
        "encryption no longer supported", 
        "checking if %s mounted on %s", 
        "%s already mounted", 
        "not found overlapping loopdev", 
        "overlapping %s detected", 
        "re-using existing loop device %s", 
        "%s is read-only", 
        "encryption no longer supported for device %s", 
        "not found; create a new loop device", 
        "enabling AUTOCLEAR flag", 
        "trying to use %s", 
        "failed to set loop attributes", 
        "failed to setup device", 
        "device stolen...trying again", 
        "removing unnecessary loop= from mtab", 
        "failed to get loopdev FD", 
        "deleted [rc=%d]", 
        "closing FD", 
        "mnt_context_is_loopdev", 
        "mnt_context_setup_loopdev", 
        "is_mounted_same_loopfile", 
        "mnt_context_delete_loopdev", 
        "mnt_context_clear_loopdev", 
        "libmount/src/context_veritydev.c", 
        "VERITY", 
        "veritydev specific options detected but libmount built without libcryptsetup", 
        "/dev/mapper/libmnt_", 
        "veritydev prefix detected in source device but libmount built without libcryptsetup", 
        "mnt_context_is_veritydev", 
        " (recursive)", 
        "libmount/src/context_mount.c", 
        "mount(2) changing flag: 0x%08lx %s", 
        "mount(2) failed [errno=%d %m]", 
        " waitpid failed", 
        "(FAKE) ", 
        "<none>", 
        "cxt->helper", 
        "mount: executing helper %s", 
        "mount: generate helper mount options", 
        "/proc/%i/fd/%i", 
        "argv[%d] = \"%s\"", 
        "%s executed [status=%d, rc=%d%s]", 
        "fork() failed", 
        "WARNING: source is NULL -- using \"none\"!", 
        "%smount(2) [source=%s, target=%s, type=%s,  mountflags=0x%08lx, mountdata=%s]", 
        "  success", 
        "trying to mount by FS list '%s'", 
        "-->trying '%s'", 
        "failed to guess FS type [rc=%d]", 
        "   --> '%s'", 
        "mount: add additional flag: 0x%08lx", 
        "cxt->action == MNT_ACT_MOUNT", 
        "cxt->helper_exec_status == 1", 
        "cxt->syscall_status == 1", 
        "mount: preparing", 
        "mount: evaluating permissions", 
        "perms: fstab not applied, ignore user mount", 
        "perms: user=<name> detected, ignore", 
        "perms: src undefined", 
        "permissions evaluation ends with -EPERMS", 
        "mount: fixing options, current vfs: '%s' fs: '%s' user: '%s', optstr: '%s'", 
        "mount: fixing vfs optstr", 
        "mount: fixing user optstr", 
        "mount: initialize additional propagation mounts", 
        " checking %s", 
        " adding extra mount(2) call for %s", 
        " removing %s from primary mount(2) call", 
        "mount: initialize additional ro,bind mount", 
        "fixed options [rc=%d]: vfs: '%s' fs: '%s' user: '%s', optstr: '%s'", 
        "mount: preparing failed", 
        "(cxt->flags & MNT_FL_PREPARED)", 
        "(cxt->action == MNT_ACT_MOUNT)", 
        "mount: do mount", 
        "use FS pattern as FS list", 
        "trying to mount by FS pattern '%s'", 
        "!(cxt->flags & MNT_FL_FORCED_RDONLY)", 
        "write-protected source, trying RDONLY.", 
        "next-mount: trying %s", 
        "next-mount: not-match [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]", 
        "next-mount: child exit [rc=%d]", 
        "next-remount: trying %s", 
        "next-remount: not-match [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]", 
        "WARNING: failed to apply propagation flags", 
        "WARNING: device write-protected, mounted read-only", 
        "operation permitted for root only", 
        "%s is already mounted", 
        "can't find in %s", 
        "can't find mount point in %s", 
        "can't find mount source %s in %s", 
        "more filesystems detected on %s; use -t <type> or wipefs(8)", 
        "failed to determine filesystem type", 
        "no filesystem type specified", 
        "can't find %s", 
        "no mount source specified", 
        "failed to parse mount options: %m", 
        "failed to parse mount options", 
        "failed to setup loop device for %s", 
        "overlapping loop device exists for %s", 
        "locking failed", 
        "failed to switch namespace", 
        "mount failed: %m", 
        "filesystem was mounted, but failed to update userspace mount table", 
        "filesystem was mounted, but failed to switch namespace back", 
        "filesystem was mounted, but any subsequent operation failed: %m", 
        "mount point is not a directory", 
        "permission denied", 
        "must be superuser to use mount", 
        "mount point is busy", 
        "%s already mounted on %s", 
        "%s already mounted or mount point busy", 
        "mount point does not exist", 
        "mount point is a symbolic link to nowhere", 
        "special device %s does not exist", 
        "mount(2) system call failed: %m", 
        "special device %s does not exist (a path prefix is not a directory)", 
        "mount point not mounted or bad option", 
        "not mount point or bad option", 
        "bad option; moving a mount residing under a shared mount is unsupported", 
        "bad option; for several filesystems (e.g. nfs, cifs) you might need a /sbin/mount.<type> helper program", 
        "wrong fs type, bad option, bad superblock on %s, missing codepage or helper program, or other error", 
        "mount table full", 
        "can't read superblock on %s", 
        "unknown filesystem type '%s'", 
        "unknown filesystem type", 
        "%s is not a block device, and stat(2) fails?", 
        "the kernel does not recognize %s as a block device; maybe \"modprobe driver\" is necessary", 
        "%s is not a block device; try \"-o loop\"", 
        "%s is not a block device", 
        "%s is not a valid block device", 
        "cannot mount %s read-only", 
        "%s is write-protected but explicit read-write mode requested", 
        "cannot remount %s read-write, is write-protected", 
        "bind %s failed", 
        "no medium found on %s", 
        "cannot mount; probably corrupted filesystem on %s", 
        "fscontext", 
        "defcontext", 
        "rootcontext", 
        "seclabel", 
        "do_mount_additional", 
        "do_mount", 
        "exec_helper", 
        "generate_helper_optstr", 
        "do_mount_by_types", 
        "mnt_context_append_additional_mount", 
        "mnt_context_mount_setopt", 
        "mnt_context_prepare_mount", 
        "evaluate_permissions", 
        "fix_optstr", 
        "mnt_context_do_mount", 
        "do_mount_by_pattern", 
        "mnt_context_finalize_mount", 
        "mnt_context_mount", 
        "umount: umount.%s %s requested", 
        "umount", 
        "<not found>", 
        "umount: lookup FS for '%s'", 
        "umount: failed to read mtab", 
        "umount: mtab empty", 
        "mtab is broken?!?!", 
        "umount: %s: %s is mounted over it on the same point", 
        "umount: %s --> %s (retry)", 
        "umount: warning: %s is associated with more than one loopdev", 
        "umount fs: %s", 
        "libmount/src/context_umount.c", 
        "umount: undefined target", 
        "umount: disable mtab", 
        "umount: trying statfs()", 
        "umount: mountinfo unnecessary [type=%s]", 
        "umount: cannot find '%s' in mtab", 
        "umount: failed to copy FS", 
        "umount: mtab applied", 
        "cxt->action == MNT_ACT_UMOUNT", 
        "umount: evaluating permissions", 
        "cannot find %s in mtab and you are not root", 
        "uhelper", 
        "fuseblk", 
        "fuseblk.", 
        "user_id", 
        "fuse user mount, umount is allowed", 
        "umount: using bind source: %s", 
        "umount %s: mtab disagrees with fstab", 
        "umount: promiscuous setting ('users') in fstab", 
        "umount: checking user=<username> from mtab", 
        "umount %s: cannot convert %d to username", 
        "umount %s is allowed", 
        "umount is not allowed for you", 
        "helper", 
        "umount: preparing failed", 
        " (FAKE)", 
        "(cxt->action == MNT_ACT_UMOUNT)", 
        "fake mode: does not execute helper", 
        "do umount", 
        "umount(2) [target='%s', flags=0x%08x]%s", 
        "umount(2) failed [errno=%d] -- trying to remount read-only", 
        "read-only re-mount(2) failed [errno=%d]", 
        "read-only re-mount(2) success", 
        "umount(2) failed [errno=%d]", 
        "umount(2) success", 
        "umount: %s", 
        "next-umount: trying %s [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]", 
        "next-umount: not-match", 
        "not mounted", 
        "umount failed: %m", 
        "filesystem was unmounted, but failed to update userspace mount table", 
        "filesystem was unmounted, but failed to switch namespace back", 
        "filesystem was unmounted, but any subsequent operation failed: %m", 
        "invalid block device", 
        "can't write superblock", 
        "target is busy", 
        "no mount point specified", 
        "must be superuser to unmount", 
        "block devices are not permitted on filesystem", 
        "umount(2) system call failed: %m", 
        "lookup_umount_fs", 
        "mnt_context_umount_setopt", 
        "mnt_context_prepare_umount", 
        "evaluate_permissions", 
        "mnt_context_do_umount", 
        "do_umount", 
        "exec_helper", 
        "mnt_context_finalize_umount", 
        "mnt_context_umount", 
        "libmount/src/monitor.c", 
        "MONITOR", 
        " add fd=%d (for %s)", 
        " remove fd=%d (for %s)", 
        "me->path", 
        " open kernel monitor for %s", 
        "failed to create kernel  monitor [rc=%d]", 
        " added inotify watch for %s [fd=%d]", 
        "%s.lock", 
        " success", 
        " nothing", 
        "drain and verify userspace monitor inotify", 
        " inotify event 0x%x [%s]", 
        " removing watch [fd=%d]", 
        " open userspace monitor for %s", 
        "failed to create userspace monitor [rc=%d]", 
        "allocate new userspace monitor", 
        "failed to get userspace mount table path", 
        "failed to allocate userspace monitor [rc=%d]", 
        "allocate new kernel monitor", 
        "failed to allocate kernel monitor [rc=%d]", 
        "closing top-level monitor fd", 
        "create top-level monitor fd", 
        "adding monitor entries to epoll (fd=%d)", 
        "successfully created monitor", 
        "failed to create monitor [rc=%d]", 
        "calling epoll_wait(), timeout=%d", 
        "asking for next changed", 
        " *** error", 
        " *** nothing", 
        " *** success [changed: %s]", 
        "monitor_next_entry", 
        "monitor_modify_epoll", 
        "userspace_monitor_close_fd", 
        "monitor_new_entry", 
        "kernel_monitor_get_fd", 
        "kernel_monitor_close_fd", 
        "userspace_add_watch", 
        "userspace_monitor_get_fd", 
        "opendir() failed for \"%s\" [errno=%d %m]", 
        "dirfd(opendir()) failed for \"%s\" [errno=%d %m]", 
        "ioctl() failed for \"%s\" [errno=%d %m]", 
        "root tree dir object id not found", 
        "found %d root tree dir object id items", 
        "default", 
        "\"default\" id is %llu", 
        "\"default\" id not found in tree root", 
        "unexpected type found: %d", 
        "warning: %s is misaligned", 
        "printer", 
        "processor", 
        "scanner", 
        "mo-disk", 
        "changer", 
        "enclosure", 
        "no-lun", 
        "%s/sys/block/%s/dm/name", 
        "/dev/mapper/%s", 
        "Qkkbal", 
        "BASH_ENV=", 
        "LANGUAGE=", 
        "KRB_CONF=", 
        "LIBPATH=", 
        "NLSPATH=", 
        "SHELL=", 
        "SHLIB_PATH=", 
        "TMPDIR", 
        "%s/%s.XXXXXX", 
        "/proc/self/fd", 
        "/.ismount-test-file", 
        "[SWAP]", 
        "Filenameblack", 
        "darkgray", 
        "[1;30m", 
        "halfbright", 
        "lightblue", 
        "[1;34m", 
        "lightcyan", 
        "[1;36m", 
        "lightgray,", 
        "lightgreen", 
        "[1;32m", 
        "lightmagenta", 
        "[1;35m", 
        "lightred", 
        "[1;31m", 
        "magenta", 
        "reverse", 
        "yellow", 
        "[1;33m", 
        "\\x%02x", 
        "waitpid failed (%s)", 
        "failed to set the %s environment variable", 
        "cannot duplicate string", 
        "failed to execute %s", 
        "cannot allocate %zu bytes", 
        "/dev/urandom", 
        "/dev/random", 
        "getrandom() function", 
        "%s -- %s", 
        "%s: '%s'", 
        "KMGTPEZY", 
        "kmgtpezy", 
        "BKMGTPE", 
        "%d%s%lu%s", 
        ".Aseconds", 
        "lib/timeutils.c", 
        "Sunday", 
        "yesterday", 
        "tomorrow", 
        "%y-%m-%d %H:%M:%S", 
        "%Y-%m-%d %H:%M:%S", 
        "%Y-%m-%dT%H:%M:%S", 
        "%y-%m-%d %H:%M", 
        "%Y-%m-%d %H:%M", 
        "%y-%m-%d", 
        "%Y-%m-%d", 
        "%H:%M:%S", 
        "%Y%m%d%H%M%S", 
        "%4ld-%.2d-%.2d", 
        "format_iso_time: buffer overflow.", 
        "%02d:%02d:%02d", 
        ".%06ld", 
        ",%06ld", 
        "%+03d:%02d", 
        "time %ld is out of range.", 
        "%02d:%02d", 
        "%b%d/%H:%M", 
        "%Y-%b%d", 
        "second", 
        "minutes", 
        "minute", 
        "months", 
        "Monday", 
        "Tuesday", 
        "Wednesday", 
        "Thursday", 
        "Friday", 
        "Saturday", 
        "parse_sec", 
        "parse_timestamp", 
        "COLUMNS", 
        "/bin/sh", 
        "lib/strv.c", 
        "strv_split", 
        "strv_remove", 
        "STKFLT", 
        "VTALRM", 
        "/proc/sys/kernel/cap_last_cap", 
        "%d.%d.%d", 
        "loopdev", 
        "sysfs: failed devname to devno", 
        "sysfs: init failed", 
        "scan dir: %s", 
        "loop%u", 
        "/dev/loop/", 
        "closing old open fd", 
        "%s name assigned", 
        "LOOPDEV_DEBUG", 
        "initialize context", 
        "/sys/block", 
        "init: disable /sys usage", 
        "init: ignore ioctls", 
        "/dev/loop-control", 
        "init: loop-control detected ", 
        "open %s [%s]: %m", 
        "initialize", 
        "de-initialize", 
        "reading loop_info64 OK", 
        "reading loop_info64 FAILED", 
        "loop/backing_file", 
        "get_backing_file [%s]", 
        "loop/offset", 
        "get_offset [rc=%d]", 
        "%s does not exist", 
        "%s exist", 
        "failed to use %s device", 
        "scanning /sys/block", 
        "check %s", 
        "%s/loop/backing_file", 
        "scan /proc/partitions", 
        "/proc/partitions", 
        " %u %*s %*s %128[^", 
        "checking %s", 
        "next: default check", 
        "loop%d", 
        "next: scanning /dev", 
        "queue/logical_block_size", 
        "get_blocksize [rc=%d]", 
        "loop/sizelimit", 
        "get_sizelimit [rc=%d]", 
        "get_encrypt_type [rc=%d]", 
        "get_crypt_name failed", 
        "get_backing_devno [rc=%d]", 
        "get_backing_inode [rc=%d]", 
        "/sys/module/loop/parameters/max_part", 
        "loop/partscan", 
        "loop/autoclear", 
        "loop/dio", 
        "checking %s vs. %s", 
        "set offset=%jd", 
        "set sizelimit=%jd", 
        "set blocksize=%jd", 
        "set flags=%u", 
        "set backing file=%s", 
        "device open: OK", 
        "LOOP_SET_STATUS64 failed: %m", 
        "LOOP_SET_STATUS64: OK", 
        "LOOP_SET_CAPACITY failed: %m", 
        "capacity set", 
        "LOOP_SET_DIRECT_IO failed: %m", 
        "direct io set", 
        "LOOP_SET_BLOCK_SIZE failed: %m", 
        "logical block size set", 
        "device setup requested", 
        "open backing file failed: %m", 
        "backing file open: OK", 
        "closing already open device (mode mismatch)", 
        "LOOP_SET_FD failed: %m", 
        "LOOP_SET_FD: OK", 
        "failed to fstat backing file", 
        "failed to determine device size", 
        "failed to determine expected size", 
        "failed to get loop FD", 
        "failed to determine loopdev size", 
        "expected size misaligned to 512-byte sectors", 
        "warning: loopdev and expected size mismatch (%ju/%ju)", 
        "failed to set loopdev size, size: %ju, expected: %ju", 
        "success [rc=0]", 
        "failed [rc=%d]", 
        "LOOP_CLR_FD failed: %m", 
        "device removed", 
        "/loop%d", 
        "add_device %d", 
        "add_device done [rc=%d]", 
        "find_unused requested", 
        "using loop-control", 
        "find_unused by loop-control [rc=%d]", 
        "using loop scan", 
        "find_unused by scan [rc=%d]", 
        "find_overlap requested", 
        "found %s backed by %s", 
        "failed to get offset for device %s", 
        "failed to get sizelimit for device %s", 
        "overlapping loop device %s (full match)", 
        "overlapping loop device %s", 
        "find_overlap done [rc=%d]", 
        "cannot open UNIX socket", 
        "cannot set option for UNIX socket", 
        "cannot connect on UNIX socket", 
        "the plymouth request %c is not implemented", 
        "/org/freedesktop/plymouthd", 
        "%zu,%zu,", 
        "%zu-%zu,", 
        "ULPATH_DEBUG", 
        "ulpath", 
        "lib/path.c", 
        "pc->dir_fd < 0", 
        "new prefix: '%s'", 
        "new dir: '%s'", 
        "(re)set dialect", 
        "pc->dir_path", 
        "opening dir: '%s'", 
        "closing dir", 
        "dealloc", 
        "%s/%s/%s", 
        "access '%s' [no context, rc=%d]", 
        "access: '%s' [rc=%d]", 
        "stat '%s' [no context, rc=%d]", 
        "stat '%s' [rc=%d]", 
        " [redirected]", 
        "opening '%s' [no context]", 
        "opening '%s'%s", 
        "duplicate dir path", 
        " reading '%s'", 
        " fscanf [%s] '%s'", 
        "ul_path_set_prefix", 
        "ul_path_get_dirfd", 
        "ul_path_close_dirfd", 
        "/proc/%d/%s", 
        "/proc/%d/task/", 
        "cmdline", 
        "%s/stat", 
        "%*d (%255[^)])", 
        "ulsysfs", 
        "deinit", 
        "queue/", 
        "%s redirected to parent", 
        "ULSYSFS_DEBUG", 
        "new parent", 
        "/sys/dev/block/%d:%d", 
        "alloc new sysfs handler", 
        "init sysfs stuff", 
        "%s/start", 
        "%s/partition", 
        "partno (%d) -> devno (%d)", 
        "slaves", 
        "/sys/dev/block/", 
        "/subsystem", 
        "removable", 
        "dm/uuid", 
        "stratis-1-private", 
        "%u:%u:%u:%u", 
        "/sys/class", 
        "%s%s/%s_host/host%d/%s", 
        "%s%s/%s_host/host%d", 
        "/sys/bus/scsi", 
        "%s%s/devices/%d:%d:%d:%d/%s", 
        "%s%s/devices/%d:%d:%d:%d", 
        "%1023[^", 
        "lib/sysfs.c", 
        "%s/sys/block/%s/%s/dev", 
        "%s/sys/block/%s/dev", 
        "%s/sys/block/%s/device/dev", 
        "partition", 
        "ieee1394", 
        "pcmcia", 
        "__sysfs_devname_to_devno", 
        "annobin gcc 9.2.1 20190827", 
        "running gcc 9.2.1 20191120", 
        "GA*FORTIFY", 
        "GA+GLIBCXX_ASSERTIONS", 
        "GA*GOW", 
        "GA*cf_protection", 
        "GA+omit_frame_pointer", 
        "GA+stack_clash", 
        "libmount.so.1.1.0-2.35-0.4.fc32.riscv64.debug", 
        "Y5-h)*z", 
        "-L]V-1", 
        "CNvW$b", 
        "MXD{=~", 
        ".B5a<\"", 
        "YuRKEY5gj", 
        "T:n h{", 
        "@Z:J[!5!", 
        "fiw!=*v", 
        "_\">4<w", 
        "4yd~@6>T", 
        "b~@jUY`9", 
        ".shstrtab", 
        ".note.gnu.build-id", 
        ".gnu.hash", 
        ".dynsym", 
        ".dynstr", 
        ".gnu.version", 
        ".gnu.version_d", 
        ".gnu.version_r", 
        ".rela.dyn", 
        ".rela.plt", 
        ".rodata", 
        ".eh_frame_hdr", 
        ".eh_frame", 
        ".init_array", 
        ".fini_array", 
        ".data.rel.ro", 
        ".dynamic", 
        ".gnu.build.attributes", 
        ".gnu_debuglink", 
        ".gnu_debugdata"
    ], 
    "metadata": {
        "output": {}
    }
}