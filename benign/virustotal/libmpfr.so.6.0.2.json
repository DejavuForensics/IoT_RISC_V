{
    "info": {
        "added": 1626900880.055211, 
        "started": 1627037196.967243, 
        "duration": 0, 
        "ended": 1627037197.312553, 
        "owner": null, 
        "score": 0.0, 
        "id": 2323503, 
        "category": "file", 
        "git": {
            "head": "", 
            "fetch_head": ""
        }, 
        "monitor": null, 
        "package": "elf", 
        "route": null, 
        "custom": null, 
        "machine": {
            "status": "init", 
            "name": "Ubuntu1904x641", 
            "label": "Ubuntu1904x641", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-07-23 10:40:14", 
            "shutdown_on": null
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-sharedlib", 
            "yara": [], 
            "sha1": "c70f98e724df006eed05e94855c334b9387dcbf7", 
            "name": "libmpfr.so.6.0.2", 
            "type": "ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV), dynamically linked, BuildID[sha1]=df641e4367abe4094d72de26352949e36488bbe2, stripped", 
            "sha256": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb", 
            "urls": [], 
            "crc32": "EBAB931A", 
            "path": "/srv/cuckoo/cwd/storage/binaries/e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb", 
            "ssdeep": null, 
            "size": 391568, 
            "sha512": "fecdae2786a14d5bae9ce5055cb8c3326ae5f04e54d2719a9b8a2163b74909e4493edb5b9cab16b05e60ea99dd35cc82f249b0875cc63abd8889ac6c314c2d48", 
            "md5": "15430528b78a28427d367bf5c2d1c8bf"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "3d99e66f-50ce-49f6-a9c7-ed1187a900fe", 
        "parent_file_sha256": null, 
        "name": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb", 
        "scan_date": 1627026511, 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "file_infos": {
            "mimetype": "ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV)", 
            "sha1": "c70f98e724df006eed05e94855c334b9387dcbf7", 
            "tags": [], 
            "timestamp_first_scan": 1625265654.62, 
            "timestamp_last_scan": 1627026561.4, 
            "sha256": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb", 
            "md5": "15430528b78a28427d367bf5c2d1c8bf", 
            "size": 391568
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.78, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-06-08_09"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.05, 
                    "version": "1.1.18300.4", 
                    "results": null, 
                    "virus_database_version": "1.343.1173.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.04, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-05-05"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.42, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6087dbf0-1e845 (2021-04-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.16, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": -1, 
                    "duration": 3.23, 
                    "version": "unavailable", 
                    "virus_database_version": "unavailable", 
                    "error": "free(): double free detected in tcache 2\n/opt/forticlient/scan.sh: line 8: 1741093 Segmentation fault      (core dumped) \"$scanbin\" -s \"$vir_sig\" -o \"$tmpdir\" --unit \"${forti}/\" -d \"$1\""
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 3.75, 
                    "version": "8.3.62.226", 
                    "results": null, 
                    "virus_database_version": "8.18.36.236"
                }, 
                "Kaspersky (Windows)": {
                    "status": 0, 
                    "duration": 3.19, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-07-21 19:18:00 (full)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.26, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "9966"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 8.18, 
                    "version": "5.74.0", 
                    "results": null, 
                    "virus_database_version": "5.83 (23 March 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.09, 
                    "version": "11.1.9.2103151924", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.04, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26190"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.24, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.88854 (16/06/2021)"
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.1.0.10606", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Bitdefender Antivirus Scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.55, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }
            }
        }, 
        "path": "", 
        "result_id": "c63023ac-6502-4160-a2e7-43533af787e5", 
        "file_sha256": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "scans": {
            "Bkav": {
                "detected": false, 
                "version": "1.3.0.9899", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Lionic": {
                "detected": false, 
                "version": "4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "MicroWorld-eScan": {
                "detected": false, 
                "version": "14.0.409.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "FireEye": {
                "detected": false, 
                "version": "32.44.1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "CAT-QuickHeal": {
                "detected": false, 
                "version": "14.00", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "McAfee": {
                "detected": false, 
                "version": "6.0.6.653", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Malwarebytes": {
                "detected": false, 
                "version": "4.2.2.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Zillya": {
                "detected": false, 
                "version": "2.0.0.4410", 
                "result": null, 
                "normalized": [], 
                "update": "20210716"
            }, 
            "Sangfor": {
                "detected": false, 
                "version": "2.9.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210625"
            }, 
            "K7AntiVirus": {
                "detected": false, 
                "version": "11.194.37763", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "K7GW": {
                "detected": false, 
                "version": "11.194.37763", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "BitDefenderTheta": {
                "detected": false, 
                "version": "7.2.37796.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210713"
            }, 
            "Cyren": {
                "detected": false, 
                "version": "6.3.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Symantec": {
                "detected": false, 
                "version": "1.15.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "ESET-NOD32": {
                "detected": false, 
                "version": "23642", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Baidu": {
                "detected": false, 
                "version": "1.0.0.2", 
                "result": null, 
                "normalized": [], 
                "update": "20190318"
            }, 
            "TrendMicro-HouseCall": {
                "detected": false, 
                "version": "10.0.0.1040", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Avast": {
                "detected": false, 
                "version": "21.1.5827.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "ClamAV": {
                "detected": false, 
                "version": "0.103.3.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Kaspersky": {
                "detected": false, 
                "version": "21.0.1.45", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "BitDefender": {
                "detected": false, 
                "version": "7.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "NANO-Antivirus": {
                "detected": false, 
                "version": "1.0.146.25311", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "SUPERAntiSpyware": {
                "detected": false, 
                "version": "5.6.0.1032", 
                "result": null, 
                "normalized": [], 
                "update": "20210710"
            }, 
            "Tencent": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Ad-Aware": {
                "detected": false, 
                "version": "3.0.21.179", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Emsisoft": {
                "detected": false, 
                "version": "2018.12.0.1641", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Comodo": {
                "detected": false, 
                "version": "33719", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "F-Secure": {
                "detected": false, 
                "version": "12.0.86.52", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "DrWeb": {
                "detected": false, 
                "version": "7.0.49.9080", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "VIPRE": {
                "detected": false, 
                "version": "94068", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "TrendMicro": {
                "detected": false, 
                "version": "11.0.0.1006", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "McAfee-GW-Edition": {
                "detected": false, 
                "version": "v2019.1.2+3728", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "CMC": {
                "detected": false, 
                "version": "2.10.2019.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210624"
            }, 
            "Sophos": {
                "detected": false, 
                "version": "1.3.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Avast-Mobile": {
                "detected": false, 
                "version": "210717-00", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Jiangmin": {
                "detected": false, 
                "version": "16.0.100", 
                "result": null, 
                "normalized": [], 
                "update": "20210716"
            }, 
            "Avira": {
                "detected": false, 
                "version": "8.3.3.12", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "MAX": {
                "detected": false, 
                "version": "2019.9.16.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Antiy-AVL": {
                "detected": false, 
                "version": "3.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Kingsoft": {
                "detected": false, 
                "version": "2017.9.26.565", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Microsoft": {
                "detected": false, 
                "version": "1.1.18400.3", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Gridinsoft": {
                "detected": false, 
                "version": "1.0.48.141", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Arcabit": {
                "detected": false, 
                "version": "1.0.0.886", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "ViRobot": {
                "detected": false, 
                "version": "2014.3.20.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "ZoneAlarm": {
                "detected": false, 
                "version": "1.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "GData": {
                "detected": false, 
                "version": "A:25.30314B:27.23754", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Cynet": {
                "detected": false, 
                "version": "4.0.0.27", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "AhnLab-V3": {
                "detected": false, 
                "version": "3.20.4.10148", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Acronis": {
                "detected": false, 
                "version": "1.1.1.82", 
                "result": null, 
                "normalized": [], 
                "update": "20210512"
            }, 
            "ALYac": {
                "detected": false, 
                "version": "1.1.3.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "TACHYON": {
                "detected": false, 
                "version": "2021-07-17.02", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "VBA32": {
                "detected": false, 
                "version": "5.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210716"
            }, 
            "Zoner": {
                "detected": false, 
                "version": "0.0.0.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210716"
            }, 
            "Rising": {
                "detected": false, 
                "version": "25.0.0.26", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Yandex": {
                "detected": false, 
                "version": "5.5.2.24", 
                "result": null, 
                "normalized": [], 
                "update": "20210716"
            }, 
            "Ikarus": {
                "detected": false, 
                "version": "0.1.5.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "MaxSecure": {
                "detected": false, 
                "version": "1.0.0.1", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Fortinet": {
                "detected": false, 
                "version": "6.2.142.0", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Panda": {
                "detected": false, 
                "version": "4.6.4.2", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }, 
            "Qihoo-360": {
                "detected": false, 
                "version": "1.0.0.1300", 
                "result": null, 
                "normalized": [], 
                "update": "20210717"
            }
        }, 
        "scan_id": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb-1626552325", 
        "sha1": "c70f98e724df006eed05e94855c334b9387dcbf7", 
        "resource": "15430528b78a28427d367bf5c2d1c8bf", 
        "response_code": 1, 
        "scan_date": "2021-07-17 20:05:25", 
        "permalink": "https://www.virustotal.com/gui/file/e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb/detection/f-e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb-1626552325", 
        "summary": {
            "positives": 0, 
            "permalink": "https://www.virustotal.com/gui/file/e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb/detection/f-e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb-1626552325", 
            "scan_date": "2021-07-17 20:05:25"
        }, 
        "sha256": "e1490903324d2604b35a7c8695cf9ff5ef992ea9384f39cd08303c89c8c9afdb", 
        "normalized": [], 
        "total": 60, 
        "positives": 0, 
        "verbose_msg": "Scan finished, information embedded", 
        "md5": "15430528b78a28427d367bf5c2d1c8bf"
    }, 
    "network": {
        "tls": [], 
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "icmp": [], 
        "smtp": [], 
        "tcp": [], 
        "smtp_ex": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "hosts": [], 
        "pcap_sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
        "dns": [], 
        "http_ex": [], 
        "domains": [], 
        "dead_hosts": [], 
        "irc": [], 
        "https_ex": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "debug": {
        "action": [
            "vmrouting"
        ], 
        "dbgview": [], 
        "errors": [
            "Error processing task #2323503: it appears that the Virtual Machine hasn't been able to contact back to the Cuckoo Host. There could be a few reasons for this, please refer to our documentation on the matter: https://cuckoo.sh/docs/faq/index.html#troubleshooting-vm-network-configuration"
        ], 
        "log": [], 
        "cuckoo": [
            "2021-07-23 10:40:13,904 [cuckoo.core.scheduler] INFO: Task #2323503: acquired machine Ubuntu1904x641 (label=Ubuntu1904x641)\n", 
            "2021-07-23 10:40:13,905 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.101 for task #2323503\n", 
            "2021-07-23 10:40:13,992 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 3333688 (interface=vboxnet0, host=192.168.168.101)\n", 
            "2021-07-23 10:40:14,125 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x641\n"
        ]
    }, 
    "strings": [
        "kGtm2.", 
        "<==+cCq", 
        "3e~nL|", 
        "r6 3WDTX", 
        "WoJ3XoJ3", 
        "}:![/U", 
        "fiJ3r.I", 
        "K=J9uC", 
        "il=4g@2Bjl=4#a", 
        "Tul=4|", 
        "2\\Fd3o\\", 
        "+?|hFd3", 
        "_ITM_deregisterTMCloneTable", 
        "_ITM_registerTMCloneTable", 
        "__cxa_finalize", 
        "mpfr_get_emin", 
        "__gmpfr_emin", 
        "__tls_get_addr", 
        "mpfr_set_emin", 
        "mpfr_get_emin_min", 
        "mpfr_get_emin_max", 
        "mpfr_get_emax", 
        "__gmpfr_emax", 
        "mpfr_set_emax", 
        "mpfr_get_emax_min", 
        "mpfr_get_emax_max", 
        "mpfr_flags_clear", 
        "__gmpfr_flags", 
        "mpfr_flags_set", 
        "mpfr_flags_test", 
        "mpfr_flags_save", 
        "mpfr_flags_restore", 
        "mpfr_clear_flags", 
        "mpfr_clear_underflow", 
        "mpfr_clear_overflow", 
        "mpfr_clear_divby0", 
        "mpfr_clear_nanflag", 
        "mpfr_clear_inexflag", 
        "mpfr_clear_erangeflag", 
        "mpfr_set_underflow", 
        "mpfr_set_overflow", 
        "mpfr_set_divby0", 
        "mpfr_set_nanflag", 
        "mpfr_set_inexflag", 
        "mpfr_set_erangeflag", 
        "mpfr_underflow_p", 
        "mpfr_overflow_p", 
        "mpfr_divby0_p", 
        "mpfr_nanflag_p", 
        "mpfr_inexflag_p", 
        "mpfr_erangeflag_p", 
        "mpfr_underflow", 
        "mpfr_setmin", 
        "mpfr_overflow", 
        "mpfr_setmax", 
        "mpfr_check_range", 
        "mpfr_powerof2_raw", 
        "mpfr_extract", 
        "__gmpz_realloc2", 
        "memset", 
        "memcpy", 
        "mpfr_assert_fail", 
        "__gmpfr_ceil_exp2", 
        "__gmpfr_ceil_log2", 
        "__gmpfr_floor_log2", 
        "mpfr_add", 
        "mpfr_add1sp", 
        "mpfr_add1", 
        "mpfr_sub1sp", 
        "mpfr_sub1", 
        "mpfr_set4", 
        "mpfr_ubf_exp_less_p", 
        "__stack_chk_guard", 
        "__gmpn_rshift", 
        "__gmpn_add_n", 
        "mpfr_ubf_diff_exp", 
        "mpfr_tmp_free", 
        "mpfr_ubf_zexp2exp", 
        "mpfr_tmp_allocate", 
        "__stack_chk_fail", 
        "mpfr_add_ui", 
        "mpfr_clz_tab", 
        "mpfr_set_ui_2exp", 
        "mpfr_agm", 
        "mpfr_cmp3", 
        "mpfr_mul", 
        "mpfr_sqrt", 
        "mpfr_div_2ui", 
        "mpfr_cmp2", 
        "mpfr_init2", 
        "mpfr_sub", 
        "mpfr_sqr", 
        "mpfr_div", 
        "mpfr_clear", 
        "mpfr_round_p", 
        "mpfr_swap", 
        "mpfr_free_func", 
        "mpfr_cmp", 
        "mpfr_cmpabs", 
        "mpfr_cmp_si_2exp", 
        "mpfr_cmp_si", 
        "mpfr_cmp_ui_2exp", 
        "mpfr_cmp_ui", 
        "mpfr_greater_p", 
        "mpfr_greaterequal_p", 
        "mpfr_less_p", 
        "mpfr_lessequal_p", 
        "mpfr_lessgreater_p", 
        "mpfr_equal_p", 
        "mpfr_unordered_p", 
        "mpfr_div_2exp", 
        "mpfr_div_2si", 
        "__gmpn_divrem", 
        "mpfr_mpz_init", 
        "mpfr_get_z_2exp", 
        "__gmpz_sizeinbase", 
        "__gmpz_tdiv_q", 
        "__gmpz_scan1", 
        "__gmpz_scan0", 
        "mpfr_mpz_clear", 
        "mpfr_div_ui", 
        "__gmpz_tdiv_q_2exp", 
        "__gmpz_mul_2exp", 
        "mpfr_set_z", 
        "__gmpn_mul", 
        "__gmpn_sub_n", 
        "mpfr_divhigh_n", 
        "__gmpn_divrem_1", 
        "__gmpn_lshift", 
        "mpfr_fdump", 
        "fwrite", 
        "__fprintf_chk", 
        "__gmp_fprintf", 
        "mpfr_dump", 
        "stdout", 
        "mpfr_eq", 
        "mpfr_exp10", 
        "mpfr_ui_pow", 
        "mpfr_exp2", 
        "mpfr_get_si", 
        "mpfr_sub_si", 
        "__gmpfr_cache_const_log2", 
        "mpfr_cache", 
        "mpfr_exp", 
        "mpfr_mul_2si", 
        "__gmpfr_one", 
        "mpfr_round_near_x", 
        "mpfr_set_prec", 
        "__gmpz_set", 
        "__gmpz_mul", 
        "__gmpz_set_ui", 
        "__gmpz_add", 
        "__gmpz_fdiv_q_2exp", 
        "mpfr_exp_3", 
        "mpfr_allocate_func", 
        "mpfr_mul_2ui", 
        "mpfr_exp_2", 
        "mpfr_set_si_2exp", 
        "mpfr_sub_ui", 
        "__gmpfr_const_log2_RNDD", 
        "__gmpfr_const_log2_RNDU", 
        "mpfr_nextabove", 
        "mpfr_frac", 
        "mpfr_integer_p", 
        "__gmpn_copyd", 
        "mpfr_round_raw", 
        "mpfr_frexp", 
        "mpfr_get_d", 
        "mpfr_round_raw_4", 
        "mpfr_scale2", 
        "mpfr_get_d1", 
        "__gmpfr_default_rounding_mode", 
        "mpfr_get_d_2exp", 
        "mpfr_get_exp", 
        "__gmpn_get_str", 
        "mpfr_ceil_mul", 
        "__gmpfr_l2b", 
        "mpfr_get_str", 
        "mpfr_mpn_exp", 
        "__gmpn_scan1", 
        "strcpy", 
        "__gmpn_tdiv_qr", 
        "__gmpn_popcount", 
        "mpfr_free_str", 
        "strlen", 
        "mpfr_l2b_62_1__tab", 
        "mpfr_l2b_62_0__tab", 
        "mpfr_l2b_61_1__tab", 
        "mpfr_l2b_61_0__tab", 
        "mpfr_l2b_60_1__tab", 
        "mpfr_l2b_60_0__tab", 
        "mpfr_l2b_59_1__tab", 
        "mpfr_l2b_59_0__tab", 
        "mpfr_l2b_58_1__tab", 
        "mpfr_l2b_58_0__tab", 
        "mpfr_l2b_57_1__tab", 
        "mpfr_l2b_57_0__tab", 
        "mpfr_l2b_56_1__tab", 
        "mpfr_l2b_56_0__tab", 
        "mpfr_l2b_55_1__tab", 
        "mpfr_l2b_55_0__tab", 
        "mpfr_l2b_54_1__tab", 
        "mpfr_l2b_54_0__tab", 
        "mpfr_l2b_53_1__tab", 
        "mpfr_l2b_53_0__tab", 
        "mpfr_l2b_52_1__tab", 
        "mpfr_l2b_52_0__tab", 
        "mpfr_l2b_51_1__tab", 
        "mpfr_l2b_51_0__tab", 
        "mpfr_l2b_50_1__tab", 
        "mpfr_l2b_50_0__tab", 
        "mpfr_l2b_49_1__tab", 
        "mpfr_l2b_49_0__tab", 
        "mpfr_l2b_48_1__tab", 
        "mpfr_l2b_48_0__tab", 
        "mpfr_l2b_47_1__tab", 
        "mpfr_l2b_47_0__tab", 
        "mpfr_l2b_46_1__tab", 
        "mpfr_l2b_46_0__tab", 
        "mpfr_l2b_45_1__tab", 
        "mpfr_l2b_45_0__tab", 
        "mpfr_l2b_44_1__tab", 
        "mpfr_l2b_44_0__tab", 
        "mpfr_l2b_43_1__tab", 
        "mpfr_l2b_43_0__tab", 
        "mpfr_l2b_42_1__tab", 
        "mpfr_l2b_42_0__tab", 
        "mpfr_l2b_41_1__tab", 
        "mpfr_l2b_41_0__tab", 
        "mpfr_l2b_40_1__tab", 
        "mpfr_l2b_40_0__tab", 
        "mpfr_l2b_39_1__tab", 
        "mpfr_l2b_39_0__tab", 
        "mpfr_l2b_38_1__tab", 
        "mpfr_l2b_38_0__tab", 
        "mpfr_l2b_37_1__tab", 
        "mpfr_l2b_37_0__tab", 
        "mpfr_l2b_36_1__tab", 
        "mpfr_l2b_36_0__tab", 
        "mpfr_l2b_35_1__tab", 
        "mpfr_l2b_35_0__tab", 
        "mpfr_l2b_34_1__tab", 
        "mpfr_l2b_34_0__tab", 
        "mpfr_l2b_33_1__tab", 
        "mpfr_l2b_33_0__tab", 
        "mpfr_l2b_32_1__tab", 
        "mpfr_l2b_32_0__tab", 
        "mpfr_l2b_31_1__tab", 
        "mpfr_l2b_31_0__tab", 
        "mpfr_l2b_30_1__tab", 
        "mpfr_l2b_30_0__tab", 
        "mpfr_l2b_29_1__tab", 
        "mpfr_l2b_29_0__tab", 
        "mpfr_l2b_28_1__tab", 
        "mpfr_l2b_28_0__tab", 
        "mpfr_l2b_27_1__tab", 
        "mpfr_l2b_27_0__tab", 
        "mpfr_l2b_26_1__tab", 
        "mpfr_l2b_26_0__tab", 
        "mpfr_l2b_25_1__tab", 
        "mpfr_l2b_25_0__tab", 
        "mpfr_l2b_24_1__tab", 
        "mpfr_l2b_24_0__tab", 
        "mpfr_l2b_23_1__tab", 
        "mpfr_l2b_23_0__tab", 
        "mpfr_l2b_22_1__tab", 
        "mpfr_l2b_22_0__tab", 
        "mpfr_l2b_21_1__tab", 
        "mpfr_l2b_21_0__tab", 
        "mpfr_l2b_20_1__tab", 
        "mpfr_l2b_20_0__tab", 
        "mpfr_l2b_19_1__tab", 
        "mpfr_l2b_19_0__tab", 
        "mpfr_l2b_18_1__tab", 
        "mpfr_l2b_18_0__tab", 
        "mpfr_l2b_17_1__tab", 
        "mpfr_l2b_17_0__tab", 
        "mpfr_l2b_16_1__tab", 
        "mpfr_l2b_16_0__tab", 
        "mpfr_l2b_15_1__tab", 
        "mpfr_l2b_15_0__tab", 
        "mpfr_l2b_14_1__tab", 
        "mpfr_l2b_14_0__tab", 
        "mpfr_l2b_13_1__tab", 
        "mpfr_l2b_13_0__tab", 
        "mpfr_l2b_12_1__tab", 
        "mpfr_l2b_12_0__tab", 
        "mpfr_l2b_11_1__tab", 
        "mpfr_l2b_11_0__tab", 
        "mpfr_l2b_10_1__tab", 
        "mpfr_l2b_10_0__tab", 
        "mpfr_l2b_9_1__tab", 
        "mpfr_l2b_9_0__tab", 
        "mpfr_l2b_8_1__tab", 
        "mpfr_l2b_8_0__tab", 
        "mpfr_l2b_7_1__tab", 
        "mpfr_l2b_7_0__tab", 
        "mpfr_l2b_6_1__tab", 
        "mpfr_l2b_6_0__tab", 
        "mpfr_l2b_5_1__tab", 
        "mpfr_l2b_5_0__tab", 
        "mpfr_l2b_4_1__tab", 
        "mpfr_l2b_4_0__tab", 
        "mpfr_l2b_3_1__tab", 
        "mpfr_l2b_3_0__tab", 
        "mpfr_l2b_2_1__tab", 
        "mpfr_l2b_2_0__tab", 
        "mpfr_init", 
        "__gmpfr_default_fp_bit_precision", 
        "__gmpfr_inp_str", 
        "__ctype_b_loc", 
        "mpfr_reallocate_func", 
        "ungetc", 
        "mpfr_set_str", 
        "mpfr_inf_p", 
        "mpfr_nan_p", 
        "mpfr_number_p", 
        "__gmpz_add_ui", 
        "mpfr_const_log2_internal", 
        "mpfr_abort_prec_max", 
        "mpfr_const_log2", 
        "mpfr_log", 
        "__gmpfr_cache_const_pi", 
        "__gmpfr_four", 
        "mpfr_mul_si", 
        "mpfr_modf", 
        "mpfr_rint_trunc", 
        "mpfr_mul_2exp", 
        "__gmpn_mul_n", 
        "mpfr_mulhigh_n", 
        "mpfr_sqrhigh_n", 
        "mpfr_mul_ui", 
        "__gmpn_mul_1", 
        "mpfr_neg", 
        "mpfr_nexttozero", 
        "mpfr_nexttoinf", 
        "mpfr_nextbelow", 
        "mpfr_nexttoward", 
        "__gmpfr_out_str", 
        "localeconv", 
        "mpfr_snprintf", 
        "mpfr_vasnprintf_aux", 
        "__gmpfr_vsnprintf", 
        "__gmpfr_vasprintf", 
        "mpfr_printf", 
        "__printf_chk", 
        "__gmpfr_vprintf", 
        "__gmpfr_fprintf", 
        "__gmpfr_vfprintf", 
        "mpfr_sprintf", 
        "__gmpfr_vsprintf", 
        "mpfr_asprintf", 
        "strncat", 
        "__sprintf_chk", 
        "mpfr_cmp_d", 
        "strncpy", 
        "__gmp_vasprintf", 
        "__gmp_asprintf", 
        "__errno_location", 
        "__gmpq_set_ui", 
        "__gmpf_set_ui", 
        "mpfr_const_pi_internal", 
        "mpfr_const_pi", 
        "mpfr_pow_general", 
        "mpfr_clears", 
        "mpfr_odd_p", 
        "mpfr_log2", 
        "mpfr_rint", 
        "__gmpn_perfect_square_p", 
        "__gmpz_sqrt", 
        "mpfr_pow_z", 
        "mpfr_pow", 
        "mpfr_get_z", 
        "mpfr_pow_si", 
        "mpfr_ui_div", 
        "mpfr_pow_ui", 
        "mpfr_print_mant_binary", 
        "mpfr_print_rnd_mode", 
        "mpfr_reldiff", 
        "__gmpn_copyi", 
        "mpfr_round_raw_2", 
        "mpfr_prec_round", 
        "mpfr_can_round_raw", 
        "mpfr_powerof2_raw2", 
        "mpfr_can_round", 
        "mpfr_set", 
        "mpfr_abs", 
        "mpfr_set_1_2", 
        "mpfr_min_prec", 
        "mpfr_set_d", 
        "mpfr_set_default_prec", 
        "mpfr_get_default_prec", 
        "mpfr_set_exp", 
        "mpfr_set_default_rounding_mode", 
        "mpfr_get_default_rounding_mode", 
        "mpfr_set_f", 
        "mpfr_set_prec_raw", 
        "mpfr_get_prec", 
        "mpfr_set_q", 
        "mpfr_set_si", 
        "mpfr_strtofr", 
        "mpfr_init_set_str", 
        "mpfr_set_str_binary", 
        "mpfr_set_ui", 
        "mpfr_set_z_2exp", 
        "__gmpn_sqrtrem", 
        "__gmpn_sqr", 
        "mpfr_sqrt_ui", 
        "mpfr_roundeven", 
        "mpfr_round", 
        "mpfr_trunc", 
        "mpfr_ceil", 
        "mpfr_floor", 
        "mpfr_rint_roundeven", 
        "mpfr_rint_round", 
        "mpfr_rint_ceil", 
        "mpfr_rint_floor", 
        "mpfr_ui_sub", 
        "mpfr_urandom", 
        "mpfr_rand_raw", 
        "__gmpz_urandomb", 
        "mpfr_urandomb", 
        "mpfr_fac_ui", 
        "mpfr_cosh", 
        "mpfr_sinh", 
        "mpfr_tanh", 
        "mpfr_sinh_cosh", 
        "mpfr_acosh", 
        "mpfr_asinh", 
        "mpfr_atanh", 
        "__gmpfr_int_ceil_log2", 
        "mpfr_atan", 
        "mpfr_mpz_init2", 
        "__gmpz_cmp_ui", 
        "__gmpz_sub_ui", 
        "__gmpz_mul_ui", 
        "__gmpz_sub", 
        "__gmpfr_isqrt", 
        "__gmpz_fdiv_q_ui", 
        "__gmpz_fdiv_q", 
        "__gmpfr_cuberoot", 
        "mpfr_asin", 
        "__gmpz_addmul", 
        "__gmpz_pow_ui", 
        "mpfr_const_euler_internal", 
        "__gmpz_cdiv_q_ui", 
        "mpfr_z_sub", 
        "mpfr_const_euler", 
        "__gmpfr_cache_const_euler", 
        "mpfr_cos", 
        "mpfr_remainder", 
        "mpfr_sincos_fast", 
        "mpfr_sin", 
        "mpfr_tan", 
        "mpfr_sin_cos", 
        "mpfr_fma", 
        "mpfr_ubf_mul_exact", 
        "mpfr_fms", 
        "mpfr_hypot", 
        "mpfr_log1p", 
        "mpfr_expm1", 
        "__gmpfr_mone", 
        "mpfr_log10", 
        "mpfr_fits_ulong_p", 
        "mpfr_get_ui", 
        "mpfr_ui_pow_ui", 
        "mpfr_min", 
        "mpfr_max", 
        "mpfr_dim", 
        "mpfr_signbit", 
        "mpfr_copysign", 
        "mpfr_setsign", 
        "mpfr_mul_z", 
        "__gmpz_fits_slong_p", 
        "__gmpz_get_si", 
        "mpfr_div_z", 
        "mpfr_div_si", 
        "mpfr_add_z", 
        "mpfr_add_si", 
        "mpfr_sub_z", 
        "mpfr_si_sub", 
        "mpfr_cmp_z", 
        "mpfr_mul_q", 
        "mpfr_div_q", 
        "mpfr_add_q", 
        "mpfr_sub_q", 
        "mpfr_cmp_q", 
        "mpfr_cmp_f", 
        "__gmp_bits_per_limb", 
        "mpfr_acos", 
        "__gmpz_submul", 
        "mpfr_sgn", 
        "__gmpz_swap", 
        "mpfr_remquo", 
        "mpfr_set_nan", 
        "mpfr_set_inf", 
        "mpfr_set_zero", 
        "mpfr_lgamma", 
        "mpfr_lngamma", 
        "mpfr_bernoulli_cache", 
        "mpfr_gamma", 
        "mpfr_set_ld", 
        "mpfr_get_ld", 
        "mpfr_get_ld_2exp", 
        "mpfr_cbrt", 
        "__gmpz_root", 
        "__gmpz_tstbit", 
        "mpfr_fits_sshort_p", 
        "mpfr_fits_sint_p", 
        "mpfr_fits_slong_p", 
        "mpfr_fits_ushort_p", 
        "mpfr_fits_uint_p", 
        "mpfr_fits_uintmax_p", 
        "mpfr_fits_intmax_p", 
        "__gmpfr_set_sj", 
        "mpfr_zeta", 
        "mpfr_inits2", 
        "mpfr_erf", 
        "mpfr_add_d", 
        "mpfr_inits", 
        "mpfr_check", 
        "mpfr_get_version", 
        "stderr", 
        "__gmp_get_memory_functions", 
        "mpfr_bases", 
        "__gmpn_com", 
        "mpfr_sum", 
        "mpfr_clear_cache", 
        "__gmpfr_cache_const_catalan", 
        "mpfr_free_cache", 
        "mpfr_bernoulli_freecache", 
        "mpfr_free_pool", 
        "mpfr_free_cache2", 
        "mpfr_mp_memory_cleanup", 
        "mpfr_si_div", 
        "mpfr_cmp_ld", 
        "__gmpfr_set_uj_2exp", 
        "__gmpfr_set_uj", 
        "__gmpfr_set_sj_2exp", 
        "__gmpfr_mpfr_get_sj", 
        "__gmpfr_mpfr_get_uj", 
        "mpfr_zero_p", 
        "__gmpn_set_str", 
        "strtol", 
        "__gmpz_cmpabs_ui", 
        "__gmpz_mul_si", 
        "__gmpz_cmp_si", 
        "__gmpn_addmul_1", 
        "__gmpn_submul_1", 
        "mpfr_get_f", 
        "__gmpf_neg", 
        "mpfr_erfc", 
        "mpfr_atan2", 
        "mpfr_subnormalize", 
        "__gmpz_ui_pow_ui", 
        "mpfr_const_catalan_internal", 
        "mpfr_const_catalan", 
        "mpfr_rootn_ui", 
        "mpfr_root", 
        "mpfr_sec", 
        "mpfr_csc", 
        "mpfr_cot", 
        "mpfr_eint", 
        "__gmpz_tdiv_q_ui", 
        "mpfr_sech", 
        "mpfr_csch", 
        "mpfr_coth", 
        "__gmpfr_two", 
        "mpfr_custom_get_size", 
        "mpfr_custom_init", 
        "mpfr_custom_get_significand", 
        "mpfr_custom_get_exp", 
        "mpfr_custom_move", 
        "mpfr_custom_init_set", 
        "mpfr_custom_get_kind", 
        "mpfr_zeta_ui", 
        "__gmpz_divexact_ui", 
        "mpfr_jn", 
        "mpfr_j0", 
        "mpfr_j1", 
        "mpfr_yn", 
        "__gmpz_addmul_ui", 
        "mpfr_y0", 
        "mpfr_y1", 
        "__gmpz_tdiv_r_2exp", 
        "__gmpz_powm_ui", 
        "__gmpz_mod", 
        "__gmpz_tdiv_qr", 
        "__gmpz_cmpabs", 
        "mpfr_fmod", 
        "mpfr_fmodquo", 
        "mpfr_get_patches", 
        "mpfr_sub_d", 
        "mpfr_d_sub", 
        "mpfr_mul_d", 
        "mpfr_div_d", 
        "mpfr_d_div", 
        "mpfr_li2", 
        "mpfr_rec_sqrt", 
        "mpfr_buildopt_tls_p", 
        "mpfr_buildopt_float128_p", 
        "mpfr_buildopt_decimal_p", 
        "mpfr_buildopt_gmpinternals_p", 
        "mpfr_buildopt_sharedcache_p", 
        "mpfr_buildopt_tune_case", 
        "mpfr_digamma", 
        "__gmpz_cdiv_q", 
        "__gmpz_cdiv_q_2exp", 
        "__gmpz_fac_ui", 
        "__gmpz_divexact", 
        "mpfr_regular_p", 
        "mpfr_set_flt", 
        "mpfr_get_flt", 
        "mpfr_ai", 
        "mpfr_gamma_one_and_two_third", 
        "mpfr_div_ui2", 
        "mpfr_grandom", 
        "__gmpfr_fpif_export", 
        "__gmpfr_fpif_import", 
        "__fread_chk", 
        "__memcpy_chk", 
        "mpfr_round_nearest_away_begin", 
        "mpfr_round_nearest_away_end", 
        "mpfr_random_deviate_reset", 
        "mpfr_random_deviate_tstbit", 
        "mpfr_random_deviate_less", 
        "mpfr_nrandom", 
        "mpfr_random_deviate_init", 
        "__gmp_urandomm_ui", 
        "mpfr_random_deviate_swap", 
        "mpfr_random_deviate_clear", 
        "__gmp_urandomb_ui", 
        "mpfr_random_deviate_value", 
        "__gmpz_setbit", 
        "mpfr_erandom", 
        "mpfr_fmma", 
        "mpfr_fmms", 
        "__gmpz_set_si", 
        "mpfr_log_ui", 
        "mpfr_gamma_inc", 
        "__gmpz_cmp", 
        "mpfr_beta", 
        "mpfr_get_q", 
        "__gmpq_div_2exp", 
        "__gmpz_init", 
        "__gmpz_init2", 
        "__gmpz_clear", 
        "libgmp.so.10", 
        "libc.so.6", 
        "ld-linux-riscv64-lp64d.so.1", 
        "libmpfr.so.6", 
        "GLIBC_2.27", 
        "t}Fc@f+", 
        "$AccGA", 
        "jEao`/", 
        "y!aoP\u001f", 
        "y!aoPO", 
        "yByaao ", 
        "#0!'#8A%#8", 
        "##<1%#4Q%#0a%#<q##0", 
        "l)Eaao", 
        "~cFX!c", 
        "G}ScFV", 
        "(cQ-3c", 
        "GA}W#<", 
        ".#8!-#41-#0A-#<Q+#8a+#4q+#0", 
        "wnwNi>", 
        "\"#0!##<1!#8A!#4Q!#0a!", 
        "7'JEam", 
        "R#0!S#<1Q#8AQ#4QQ#0aQ#<qO#8", 
        "vcOZu&", 
        "4#8!3#4", 
        "2#413#0A3#<Q1#8a1#4q1#0", 
        ",'4!-'01-'<A+'8Q+'4a+'0q+'<", 
        "$#41#}T", 
        "#8!##<Q!:", 
        "\"#0A##8a!#4q!#0", 
        "tByaao =", 
        "#0a'#4", 
        "(#0!)#<1'#8A'#4Q'#<q%#8", 
        "iBiEaY", 
        "*#<q'#<", 
        "*#0!+#<1)#8A)#4Q)#0a)#8", 
        ".w.jcS", 
        ".w.jcS", 
        "\"#<1!#8A!#4Q!#0a!", 
        "ngjzcS", 
        "\"jwcSG", 
        "ngjzcS", 
        "yIaopl", 
        "#<1)#<q'#4", 
        "*#0!+#8A)#4Q)#0a)#8", 
        "cZg}3W", 
        "gAcJGw", 
        "#0!/#8A-#4", 
        ".#<1-#4Q-#0a-#<q+#8", 
        "two_i != 0 && two_i_2 <= 0x7fffffff", 
        "extract.c", 
        "d <= 1024.0", 
        "uceil_exp2.c", 
        "@exp < 1023", 
        "uceil_log2.c", 
        "?ufloor_log2.c", 
        "rnd_mode == MPFR_RNDA", 
        "add1.c", 
        "(q) > 1", 
        "scaleop == 0", 
        "e2 == (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1)", 
        "e1 > (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2)))", 
        "scaleop > 0", 
        "(18 * n + 51) > 1", 
        "(n + 2) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (p)", 
        "! ((int) (__gmpfr_flags & 2))", 
        "! ((int) (__gmpfr_flags & 1))", 
        "! ((int) (__gmpfr_flags & 32))", 
        "! ((int) (__gmpfr_flags & 4))", 
        "e1 <= e2 && e2 <= 0", 
        "!!!%s!!!", 
        "(Ny) > 1", 
        "exp2.c", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (Nt)", 
        "(size_t) m < sizeof (long) * 8 - 1", 
        "exp3.c", 
        "n <= 0x7fffffffffffffffL", 
        "(((x)->_mpfr_prec)) > 1", 
        "(prec_x + ((y)->_mpfr_prec)) > 1", 
        "(Prec) > 1", 
        "twopoweri <= 0x7fffffffffffffffL/2", 
        "(ziv_loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (realprec)", 
        "sh < (64 - 0)", 
        "frac.c", 
        "un >= 0", 
        "tn >= un", 
        "(ret >= 0.5 && ret < 1.0) || (ret <= -0.5 && ret > -1.0)", 
        "get_d.c", 
        "(!(((x)->_mpfr_exp) <= (((-0x7fffffffffffffffL - 1L))+3)) && ((! __builtin_constant_p (!!(((x)->_mpfr_exp) >= (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))) && ((x)->_mpfr_exp) <= (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1) && (((((x)->_mpfr_d)[((((! __builtin_constant_p (!!(((((x)->_mpfr_prec)) >= 1 && (((x)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))) || !(((((x)->_mpfr_prec)) >= 1 && (((x)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))))) || (((((x)->_mpfr_prec)) >= 1 && (((x)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))) ? (void) 0 : __builtin_unreachable()), (((x)->_mpfr_prec))) - 1) / (64 - 0))]) & (((mp_limb_t) 1) << ((64 - 0) - 1))) != 0)) || !(((x)->_mpfr_exp) >= (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))) && ((x)->_mpfr_exp) <= (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1) && (((((x)->_mpfr_d)[((((! __builtin_constant", 
        "get_exp.c", 
        "f <= 0", 
        "get_str.c", 
        "f > (-n * (64 - 0))", 
        "size_s1 >= m", 
        "size_s1 >= 2", 
        "-@Inf@", 
        "(prec) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (prec)", 
        "0123456789abcdefghijklmnopqrstuvwxyz", 
        "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 
        "xn >= 0", 
        "isinteger.c", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (w)", 
        "const_log2.c", 
        "iop != fop", 
        "modf.c", 
        "(mpfr_uprec_t) bq + cq <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "(((x)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+1))", 
        "next.c", 
        "base >= 2 && base <= 62", 
        "out_str.c", 
        "b->size < ((size_t) -1) - n", 
        "vasprintf.c", 
        "n >= 0x1000 && n >= len", 
        "b->size < ((size_t) -1) - len", 
        "ndigits <= ((size_t) -1) / 2", 
        "%+.2ld", 
        "spec.rnd_mode == MPFR_RNDN", 
        "spec.width < 0x7fffffff", 
        "%%%s%s%s%s%s%s*.*l%c", 
        "exp > (((-0x7fffffffffffffffL - 1L)) + 3) / 4", 
        "exp > ((-0x7fffffffffffffffL - 1L))", 
        "%+.1ld", 
        "np.ip_ptr != ((void *)0)", 
        "b->size < ((size_t) -1) - fullsize", 
        "0123456789abcdef", 
        "const_pi.c", 
        "(Nz) > 1", 
        "!k_non_zero", 
        "!(((t)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+2))", 
        "(ziv_loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (Nt)", 
        "inex2 == 0", 
        "inexact == 0", 
        "(expx) > 1", 
        "pow_si.c", 
        "(((y)->_mpfr_prec)) > 1", 
        "pow_ui.c", 
        "MPFR_RNDD", 
        "MPFR_RNDN", 
        "MPFR_RNDZ", 
        "MPFR_RNDA", 
        "MPFR_RNDF", 
        "MPFR_RNDU", 
        "((prec) >= 1 && (prec) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))", 
        "round_prec.c", 
        "prec >= 1", 
        "set_dfl_prec.c", 
        "((p) >= 1 && (p) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))", 
        "set_prc_raw.c", 
        "p <= (mpfr_prec_t) (((mp_size_t *) (mpfr_size_limb_t *) ((x)->_mpfr_d))[-1] + 0) * (64 - 0)", 
        "set_prec.c", 
        "res == 0", 
        "set_str_raw.c", 
        "expr >= (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))) && expr <= (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1)", 
        "sqrt.c", 
        "exp_b != (0x7fffffffffffffffL) || exp_a > __gmpfr_emax", 
        "sub1.c", 
        "nbits >= 1", 
        "urandomb.c", 
        "fn <= 0x7fffffff", 
        "get_z_exp.c", 
        "(Nt) > 1", 
        "factorial.c", 
        "cosh.c", 
        "sinh.c", 
        "tanh.c", 
        "sh != ch", 
        "sinh_cosh.c", 
        "(N) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (N)", 
        "acosh.c", 
        "asinh.c", 
        "atanh.c", 
        "k + 2 < p", 
        "(((atan)->_mpfr_prec)) > 1", 
        "atan.c", 
        "((realprec + sup) + 3) > 1", 
        "(3*n0-2) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (realprec)", 
        "(2 * l + 18) > 1", 
        "exp_2.c", 
        "(l) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (q)", 
        "asin.c", 
        "(n) > 1", 
        "const_euler.c", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (wp)", 
        "(precy) > 1", 
        "expx + m - 1 <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "(imax) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (m)", 
        "err1 <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - m", 
        "precx + precy <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "hypot.c", 
        "log1p.c", 
        "expm1.c", 
        "log2.c", 
        "log10.c", 
        "ui_pow_ui.c", 
        "i == 0", 
        "gmp_op.c", 
        "!(__gmpfr_flags & (1 | 2 | 32 | 4))", 
        "((y)->_mpfr_exp) >= __gmpfr_emin", 
        "! (((y)->_mpfr_exp) <= (((-0x7fffffffffffffffL - 1L))+3))", 
        "! ((__builtin_expect(!!((flags) & (2)), 0)) || (__builtin_expect(!!((flags) & (1)), 0)))", 
        "__gmp_bits_per_limb == (64 - 0)", 
        "init2.c", 
        "acos.c", 
        "m + __gmpz_sizeinbase (Q0, 2) >= prec", 
        "sin_cos.c", 
        "s != c", 
        "(w) > 1", 
        "y != z", 
        "inex1 != 0", 
        "lngamma.c", 
        "(inex1 > 0 && inex2 > 0) || (inex1 < 0 && inex2 < 0)", 
        "10.101101111110000101010001011000101001", 
        "0.010111100010110101011000110110001011001110111100111", 
        "(realprec) > 1", 
        "gamma.c", 
        "Cget_ld.c", 
        "(precz) > 1", 
        "zeta.c", 
        "(d) > 1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (d)", 
        "- ey < ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - prec1", 
        "(loop) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (prec1)", 
        "@erf.c", 
        "!(((tauk)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+3))", 
        ">4.0.2-p1", 
        "mpn_exp.c", 
        "(2 <= b) && (b <= 62)", 
        "MPFR assertion failed: %s", 
        "?UUUUUU", 
        "?@5-`g,", 
        "?WUUUUU", 
        "(minexp) >= ((-0x7fffffffffffffffL - 1L)) + sh", 
        "(maxexp2) >= ((-0x7fffffffffffffffL - 1L)) + sh", 
        "(maxexp) >= ((-0x7fffffffffffffffL - 1L)) + sh", 
        "rnd == MPFR_RNDN", 
        "(!(((x)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+2)) && !(((x)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+3)))", 
        "get_sj.c", 
        "(mpfr_prec_t) sh <= prec + 1", 
        "(((x)->_mpfr_sign) < 0) && mpfr_powerof2_raw (x)", 
        "get_uj.c", 
        "(((x)->_mpfr_sign) > 0)", 
        "(mpfr_prec_t) sh <= prec", 
        "exp < 0 || exp <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "get_z.c", 
        "(!(((r)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+2)) && !(((r)->_mpfr_exp) == (((-0x7fffffffffffffffL - 1L))+3)))", 
        "inex != 1 && inex != -1", 
        "(((cache->x)->_mpfr_sign) > 0)", 
        "cache.c", 
        "2 * (mpfr_uprec_t) bq <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "int_ceil_log2.c", 
        "strtofr.c", 
        "infinity", 
        "base == 0 || (base >= 2 && base <= 62)", 
        "pow_z.c", 
        "sx >= sy", 
        "get_f.c", 
        "ds > 0 || out == 0", 
        "sx == sz", 
        "1.0111000101010100011101100101001", 
        "erfc.c", 
        "(loop2) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (prec2)", 
        "atan2.c", 
        "(((dest)->_mpfr_prec)) > 1", 
        "subnormal.c", 
        "(!(((y)->_mpfr_exp) <= (((-0x7fffffffffffffffL - 1L))+3)) && ((! __builtin_constant_p (!!(((y)->_mpfr_exp) >= (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))) && ((y)->_mpfr_exp) <= (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1) && (((((y)->_mpfr_d)[((((! __builtin_constant_p (!!(((((y)->_mpfr_prec)) >= 1 && (((y)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))) || !(((((y)->_mpfr_prec)) >= 1 && (((y)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))))) || (((((y)->_mpfr_prec)) >= 1 && (((y)->_mpfr_prec)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))) ? (void) 0 : __builtin_unreachable()), (((y)->_mpfr_prec))) - 1) / (64 - 0))]) & (((mp_limb_t) 1) << ((64 - 0) - 1))) != 0)) || !(((y)->_mpfr_exp) >= (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))) && ((y)->_mpfr_exp) <= (((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2))-1) && (((((y)->_mpfr_d)[((((! __builtin_constant", 
        "(pg) > 1", 
        "const_catalan.c", 
        "root.c", 
        "gen_inverse.h", 
        "eint.c", 
        "MPFR: Maximal precision overflow", 
        "H@1.100101011100000000011010001110", 
        "(p) > 1", 
        "zeta_ui.c", 
        "(err) > 1", 
        "?inex2 != 0", 
        "(((res)->_mpfr_prec)) > 1", 
        "jyn_asympt.c", 
        "1.0101101111110000101010001011001", 
        "! ((int) (__gmpfr_flags & 16))", 
        "absn <= (0x7fffffffffffffffL * 2UL + 1UL) - k", 
        "(k + 2) > 1", 
        "! exception", 
        "(err - k0) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (prec)", 
        "diffexp >= 0 && err >= 0 && diffexp <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - err", 
        "(3 * absn + 3) > 1", 
        "zz < (0x7fffffffffffffffL * 2UL + 1UL) - 2", 
        "include-float", 
        "(sump) > 1", 
        "(yp) > 1", 
        "(k + 1) > 1", 
        "(__builtin_constant_p (38) && (mpfr_ulong) (38) == 0 ? (mpfr_sgn) (x) : mpfr_cmp_ui_2exp ((x), (38), 0)) >= 0", 
        "((g)->_mpfr_exp) > ((h)->_mpfr_exp)", 
        "(__builtin_constant_p (-7) && (mpfr_long) (-7) >= 0 ? (__builtin_constant_p ((mpfr_ulong) (mpfr_long) (-7)) && (mpfr_ulong) ((mpfr_ulong) (mpfr_long) (-7)) == 0 ? (mpfr_sgn) ((x)) : mpfr_cmp_ui_2exp (((x)), ((mpfr_ulong) (mpfr_long) (-7)), 0)) : mpfr_cmp_si_2exp ((x), (-7), 0)) <= 0", 
        "((g)->_mpfr_exp) >= ((h)->_mpfr_exp)", 
        "(k+1) > 1", 
        "cu == 0", 
        "rec_sqrt.c", 
        "default", 
        "(((x)->_mpfr_sign) > 0) && (((x)->_mpfr_exp) >= 2)", 
        "digamma.c", 
        "inex == 0", 
        "<0.96179669392597567", 
        "z != ((void *)0)", 
        "(i+1) > 1", 
        "(t) > 1", 
        "(3) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (((y)->_mpfr_prec))", 
        "(11) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (((y)->_mpfr_prec))", 
        "(incr) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (prec)", 
        "(k) > 1", 
        "(2 + prec / 10) > 1", 
        "gammaonethird.c", 
        "exponent_size <= 16", 
        "fpif.c", 
        "__gmpfr_emin > (1-((mpfr_exp_t) 1 << ((64 - 0)*sizeof(mpfr_exp_t)/sizeof(mp_limb_t)-2)))", 
        "rndna.c", 
        "p <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256))", 
        "n != 0UL", 
        "nrandom.c", 
        "k < ((unsigned long)(-1) >> 1)", 
        "k <= (mpfr_random_size_t)(-((int) 32 + 1))", 
        "random_deviate.c", 
        "l + 1 < (mpfr_random_size_t)(-((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)))", 
        "x->e <= (mpfr_uexp_t)(-1) >> 1", 
        "k != 0UL", 
        "erandom.c", 
        "log_ui.c", 
        "(k + 6) > 1", 
        "(j) > 1", 
        "gamma_inc.c", 
        "(1 - ((a)->_mpfr_exp)) <= ((mpfr_prec_t) ((((mpfr_uprec_t) -1) >> 1) - 256)) - (((a)->_mpfr_prec))", 
        "!(__builtin_expect(!!((flags) & (2)), 0))", 
        "(2*k+7) > 1", 
        "beta.c", 
        "((tmp)->_mpfr_exp > (2 - ((mpfr_exp_t) (((mpfr_uexp_t) -1) >> 1))))", 
        "yn >= 0", 
        "odd_p.c", 
        "annobin gcc 9.2.1 20190827", 
        "running gcc 9.2.1 20190827", 
        "GA*FORTIFY", 
        "GA+GLIBCXX_ASSERTIONS", 
        "GA*GOW", 
        "GA*cf_protection", 
        "GA+omit_frame_pointer", 
        "GA+stack_clash", 
        "GA*FORTIFY", 
        "GA+GLIBCXX_ASSERTIONS", 
        "GA*GOW", 
        "GA*cf_protection", 
        "GA+omit_frame_pointer", 
        "GA+stack_clash", 
        "libmpfr.so.6.0.2-4.0.2-1.fc32.riscv64.debug", 
        "N}9/76\u001fo&", 
        "zoR)B_y", 
        "FtpvjB", 
        "\u001f4fa'Z", 
        "hJu/_$", 
        "/BiYvJ!f%", 
        "2_72 Y", 
        "NM:.fN8", 
        "LOQc0w!!,", 
        ".shstrtab", 
        ".note.gnu.build-id", 
        ".gnu.hash", 
        ".dynsym", 
        ".dynstr", 
        ".gnu.version", 
        ".gnu.version_r", 
        ".rela.dyn", 
        ".rela.plt", 
        ".rodata", 
        ".eh_frame_hdr", 
        ".eh_frame", 
        ".tdata", 
        ".init_array", 
        ".fini_array", 
        ".data.rel.ro", 
        ".dynamic", 
        ".gnu.build.attributes", 
        ".gnu_debuglink", 
        ".gnu_debugdata"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "704e5e5b3234433c01fcfd1b20a306e77e985038120492dc53965c3edd38a4ea", 
                "dirname": ""
            }
        }
    }
}